{"version":3,"sources":["Page/HomePage/HomePage.module.scss","Components/ChatListener/style.module.scss","Components/Avatar/avatar.jpg","lib/Ultilities/getURL.js","Components/Avatar/index.js","stylesheets/svg/message.svg","stylesheets/svg/logo.svg","Components/IconBadge/index.js","stylesheets/svg/notification.svg","stylesheets/color.js","stylesheets/images/rose.jpg","stylesheets/images/jennie.jpg","lib/hooks/useColor.js","stylesheets/svg/close.svg","stylesheets/svg/search.svg","Components/SearchBox/index.js","lib/API/Apollo/Queries/index.js","Components/ChatBubble/index.js","Components/ChatListener/index.js","Components/Navbar/index.js","Components/Layout/index.js","stylesheets/svg/setting.svg","Components/UserWall/index.js","stylesheets/svg/reaction.svg","stylesheets/svg/userreaction.svg","Components/PreviewMedia/index.js","Components/Comment/CommentItem.js","Components/Comment/index.js","lib/Ultilities/Format.js","lib/API/Graphql.js","Components/Post/index.js","stylesheets/svg/back.svg","stylesheets/svg/forward.svg","Components/MediaViewer/index.js","stylesheets/svg/minimize.svg","Components/MediaBrowser/index.js","Components/NewsFeed/index.js","stylesheets/svg/picture.svg","stylesheets/svg/video.svg","Components/PostEdit/index.js","lib/hooks/useMedia.js","stylesheets/svg/checkin.svg","Components/CheckIn/index.js","Page/route.js","Page/HomePage/index.js","Page/UserPage/index.js","App.js","Page/LoginPage/index.js","ReduxStore/bin/reducers/User.js","ReduxStore/bin/reducers/Settings.js","ReduxStore/bin/reducers/Message.js","ReduxStore/bin/reducers/index.js","ReduxStore/store.js","lib/API/Apollo/Link/index.js","index.js","lib/hooks/useLogin.js","lib/API/URL.js","Components/ChatBubble/ChatBubble.module.scss","Components/Comment/Comment.module.scss","Components/PostEdit/PostEdit.module.scss","lib/API/UserAPI.js","Page/LoginPage/LoginPage.module.scss","Components/MediaBrowser/MediaBrowser.module.scss","Components/MediaViewer/MediaViewer.module.scss","ReduxStore/bin/CONSTANT.js","Components/Avatar/Avatar.module.scss","Components/Post/Post.module.scss","Components/PreviewMedia/Preview.module.scss","Components/CheckIn/CheckIn.module.scss","Components/Navbar/Navbar.module.scss","Components/UserWall/UserWall.module.scss","Components/SearchBox/SearchBox.module.scss","Page/UserPage/UserPage.module.scss"],"names":["module","exports","getImageURL","url","path","api","img","Avatar","imgSize","userAvatar","size","from","round","styles","small","medium","large","style","borderRadius","backgroundImage","indexOf","noAvatar","className","avatar","StyledBadge","withStyles","theme","badge","right","top","border","palette","background","paper","padding","Badge","IconBadge","icon","count","badgeContent","color","rosie","text","backgroundPost","jennie","useTheme","index","useSelector","state","settings","SearchBox","isMobile","useMediaQuery","useState","isShown","setState","searchDrawer","setSearchDrawer","isOpen","setOpen","searchBox","backgroundColor","display","onClick","alt","title","width","src","search","placeholder","onFocus","onBlur","type","OverlaySearch","inputRef","useRef","useEffect","current","focus","Fragment","Drawer","anchor","open","onClose","searchTitle","overlaySearch","ref","close","Query","GET_USER_INFORMATION","gql","GET_LATEST_POST","GET_USER_LATEST_POST","GET_POST_LATEST_COMMENT","POST_COMMENT","UPDATE_COMMENT","LISTEN_MESSAGE","GET_ALL_CONVERSATION","SEND_MESSAGE","INIT_MESSAGE","GET_CONVERSATION_MESSAGE","transform","ChatBubble","conversation","newMessage","dispatch","useDispatch","onOpen","data","id","conversationid","payload","onHide","container","chatGroups","filter","e","map","i","thisEl","bubbleContainer","c","handleOpen","Conversation","React","message","setMessage","getUserLazy","useLazyQuery","userid","parseInt","user","uid","messageCount","setCount","userid1","userid2","otherid","variables","waitAllMessage","messageid","bubbleItem","getUserInformation","picture","ChatDialog","useMutation","sendMessage","userState","setUserState","inputVal","setVal","bodyRef","getAllComment","useQuery","fetchPolicy","getAllMessage","newArr","s","update","length","objDiv","scrollTop","scrollHeight","chatItem","chatOpen","chatHidden","header","userfullname","body","bodyContent","commentItem","content","form","onSubmit","preventDefault","receiver","value","onChange","target","required","MessageItem","curent","scrollIntoView","left","messageGroup","ChatListener","GlobalConversation","Message","loading","err","position","Listener","listener","useSubscription","FirstGlobal","newC","lastmessage","Math","min","max","Navbar","profileImage","navbar","groupSearch","alignItems","to","logo","groupNotification","notification","Layout","children","paddingBottom","backgroundPosition","backgroundSize","backgroundAttachment","minHeight","Setting","lazy","UserWall","isLocal","openMenu","setOpenMenu","localUser","initConversation","fallback","userInfor","group","fullName","first","second","setting","FallBack","PreviewMedia","media","single","many","GetElement","isVideo","match","VideoThumbnail","height","mediaRemain","CommentItem","setUser","seeMore","setSeeMore","userinfor","comment","substring","commentInfor","timeConverter","datecreated","marginLeft","UNIX_timestamp","utcSeconds","d","Date","setUTCSeconds","toDateString","Comment","inMediaBrowser","postID","setComment","isLoad","setIsLoaded","getPostComment","postNewComment","elRef","userId","openDrawer","setSwitch","undefined","onPostComment","a","newComment","postid","getPostCommentById","comments","DrawerComment","drawerComment","trim","then","res","formComment","cmt","commentid","ScrollComment","CommentListener","console","log","getComment","gqlURL","createLikeQuery","iconcode","checkLikeStatusQuery","deleteLikeQuery","likePost","like","fetchGQL","checkLikeStatus","deleteLike","query","fetch","method","headers","JSON","stringify","response","json","Post","propsStyle","seemore","setSeemore","seeComment","setCommentView","didLike","setLike","isLock","setLock","likeCount","didlike","checkUserLikePost","likecount","setTimeout","clearTimeout","tabIndex","postInfor","postContent","behavior","block","inline","parse","like_comment","disabled","userLike","cursor","MediaViewer","setIndex","containerRef","thisDimension","setDimension","navigate","dir","old","changeHandler","newWidth","offsetWidth","newHeight","offsetHeight","window","addEventListener","removeEventListener","Left","back","ctnDimension","Right","forward","Image","image","thisRef","moreWidth","setMoreWidth","onLoad","thisWidth","thisHeight","userSelect","ImageWidth","ImageHeight","Video","video","controls","Show","MediaBrowser","post","setPost","document","overflow","getOnePostQuery","getPostById","getPostInformationById","postWrapper","hasMedia","noMedia","mediaViewer","closeButton","minimize","NewsFeed","posts","setPosts","byUID","currentPost","setCurrent","getAllPost","getUserPost","getLatestPost","getLatestPostByUserID","openBrowser","marginBottom","MyEditor","setValue","editorWrapper","MyFileViewer","files","handleFiles","deleteFile","useCallback","file","fileViewerWrapper","ImageReview","onDelete","setImg","reader","FileReader","event","result","readAsDataURL","draggable","justifyContent","PostEdit","appendPost","editorState","setEditorState","fileRef","addFile","useMedia","appendFile","viewFile","setViewFile","status","setStatus","onChangeInput","triggerFileUploads","click","closeEditor","onPost","FormData","append","forEach","API","makePost","newPost","catch","hiddenInput","multiple","accept","overlay","editor","userProfile","groupButton","invisible","CheckIn","openEditor","setOpenEditor","userImage","CheckInItem","CheckInStatus","CheckinForm","CheckinButton","checkin","routes","name","Component","isUserID","params","errorPolicy","error","pageWrapper","CheckInWrapper","NewsFeedWrapper","App","props","exact","DispatchLogin","userFullName","loggedIn","displayName","userDisplayName","TYPE","logInUser","LoginPage","hasAccount","openLoginPage","username","password","dateOfBirth","dateCreatedAccount","toISOString","email","phone","gender","handleUserInput","key","alert","Form","handleLogin","loginExistingUser","handleChange","handleRegister","registerNewUser","Suggest","appId","redirectUri","cssClass","autoLoad","fields","callback","RegisterForm","MainForm","isRequired","input","groupForm","LoginForm","defaultState","action","Type","logOutUser","changeAvatar","Settings","queue","newState","combineReducers","UserReducer","SettingsReducer","middleware","ReduxThunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","host","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","splitLink","split","definition","getMainDefinition","kind","operation","client","ApolloClient","link","cache","InMemoryCache","Loader","isLoggedIn","setLoggedIn","checkLoggedIn","useLogin","ReactDOM","render","StrictMode","ApolloProvider","getElementById","dev","getHeaders","feedback","Error","loginFacebook","axios","get","getUserById","getEarlierPostByLastId","lastId","getAllPostById","getUserEarlierPostById","setUserAvatar","userCommentPost","getPostLatestComment","updateCommentByLastID","mode"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,UAAY,4BAA4B,OAAS,2B,oBCAnED,EAAOC,QAAU,CAAC,UAAY,2B,2HCDf,MAA0B,mC,QCClC,SAASC,EAAYC,GAChB,IAAOC,EAAMD,EAANC,KAGZ,OAAOC,IAAIC,IAAIF,E,WCDP,SAASG,EAAT,GAA4D,IAAD,EAClEC,EDGuBL,ECJCM,EAA0C,EAA1CA,WAA0C,IAA/BC,YAA+B,MAA1B,QAA0B,OAAlBC,KAAkB,EAAbC,cAAa,SAEtE,OAAQF,GACJ,IAAK,QAAQF,EAAQK,IAAOC,MAExB,MACA,IAAK,SAASN,EAAQK,IAAOE,OAE7B,MACA,IAAK,QAAQP,EAAQK,IAAOG,MAE5B,MACJ,QACIR,EAAQK,IAAOC,MAGvB,OACI,qBAAKG,MAAO,CAACC,aAAaN,EAAM,GAAG,IAAIO,gBAAgB,QAAD,eDb/BhB,ECauDM,EAAxB,GDXpD,OAAHN,QAAG,IAAHA,OAAA,EAAAA,EAAKiB,QAAQ,aAAY,EACpBf,IAAIC,IAAIH,EAETA,SCQmD,QAAqCkB,EAArC,OAAoDC,UAAS,UAAKT,IAAOU,OAAZ,YAAsBf,K,6BCrBlI,MAA0B,oCCA1B,MAA0B,iC,iBCKnCgB,EAAcC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,MAAO,EACPC,IAAK,EACLC,OAAO,aAAD,OAAeJ,EAAMK,QAAQC,WAAWC,OAC9CC,QAAS,YALKT,CAOdU,KACS,SAASC,EAAT,GAAuC,IAAnBC,EAAkB,EAAlBA,KAAK3B,EAAa,EAAbA,KAAK4B,EAAQ,EAARA,MACzC,OAAQ,cAACd,EAAD,CAAae,aAAY,OAAED,QAAF,IAAEA,IAAO,EAAGE,MAAM,YAA3C,SACV,cAACjC,EAAD,CAAQE,WAAY4B,EAAM3B,KAAMA,MCfnB,UAA0B,yC,OCkB1BgB,EAdC,CACRe,MAAM,CACFC,KAAK,oBACLV,WAAW,0BACXW,eAAe,+BACfxB,gBCTG,IAA0B,kCDWjCyB,OAAO,CACHF,KAAK,qBACLV,WAAW,2BACXW,eAAe,gCACfxB,gBEfG,IAA0B,qCCIlC,SAAS0B,IACZ,IAAMC,EAAMC,aAAY,SAAAC,GAAK,OAAEA,EAAMC,SAASvB,SAG9C,OAAOA,EAAMoB,G,kDCRF,MAA0B,kCCA1B,MAA0B,mC,kBCWnCI,EAAU,WACZ,IAAMC,EAASC,YAAc,qBAC7B,EAAyBC,oBAAS,GAAlC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAqCF,oBAAS,GAA9C,mBAAOG,EAAP,KAAoBC,EAApB,KACM/B,EAAMmB,IACZ,OAAQ,qCACR,cAAC,EAAD,CAAea,OAAQF,EAAcG,QAASF,IAC9C,uBAAMnC,UAAWT,IAAO+C,UAAW3C,MAAO,CAAC4C,gBAAgBV,EAAS,cAAc,IAAlF,UAEI,qBAAKlC,MAAO,CAAC6C,QAAQR,EAAQ,GAAG,QAAhC,SAAyC,qBACzCS,QAAS,WACFZ,GACCM,GAAgB,IAIxBO,IAAI,OAAOC,MAAM,SAASC,MAAOf,EAAS,KAAK,KAAMgB,IAAKC,MAC9D,uBAAOnD,MAAO,CAACuB,MAAMd,EAAMgB,KAAKoB,QAAQX,EAAS,OAAO,IAAKkB,YAAY,mBAAmBC,QAAS,WAAKf,GAAS,IAAUgB,OAAQ,WAAKhB,GAAS,IAAQiB,KAAK,gBAI9JC,EAAc,SAAC,GAAoB,IAAnBf,EAAkB,EAAlBA,OAAOC,EAAW,EAAXA,QACnBe,EAASC,iBAAO,MAMtB,OALAC,qBAAU,YACP,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAUG,UACZH,EAASG,QAAQC,UAEnB,CAACJ,IACI,cAAC,IAAMK,SAAP,UAEP,eAACC,EAAA,EAAD,CAAQC,OAAQ,MAAOC,KAAMxB,EAAQyB,QAAS,WAAKxB,GAAQ,IAA3D,UACI,mBAAGrC,UAAWT,IAAOuE,YAArB,8BACA,sBAAK9D,UAAWT,IAAOwE,cAAvB,UACA,8BAAK,qBAAKrB,IAAI,OAAOC,MAAM,SAASE,IAAKC,MACrC,uBAAOkB,IAAKZ,EAAUF,KAAK,SAC3B,8BAAK,qBAAKT,QAAS,WAAKJ,GAAQ,IAASK,IAAI,OAAOC,MAAM,SAASE,IAAKoB,e,yBCqHrEC,EAjKD,CACZC,qBAAsBC,YAAF,kNAUpBC,gBAAgBD,YAAD,iRAqBfE,qBAAqBF,YAAD,2TAoBpBG,wBAAwBH,YAAD,6OAevBI,aAAaJ,YAAD,uVAedK,eAAeL,YAAD,yOAgBdM,eAAeN,YAAD,qMAadO,qBAAqBP,YAAD,4MAapBQ,aAAaR,YAAD,oUAYZS,aAAaT,YAAD,iPAUZU,yBAAyBV,YAAD,mK,kEC5IlBlE,GAAcC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACHC,MAAO,EAEPC,IAAK,GACPwE,UAAU,YALI5E,CAOdU,KACS,SAASmE,GAAT,GAAgD,IAA3BC,EAA0B,EAA1BA,aAAaC,EAAa,EAAbA,WACtCC,EAAWC,cACZC,EAAO,SAACC,GACV,IAAMC,EAAGD,EAAKE,eACdL,EAAS,CAACjC,KAAK,mBAAmBuC,QAAQF,KAGxCG,EAAO,SAACH,GACNJ,EAAS,CAACjC,KAAK,mBAAmBuC,QAAQF,KAE5C1B,EAAQ,SAAC0B,GACXJ,EAAS,CAACjC,KAAK,oBAAoBuC,QAAQF,KAE/C,OACI,sBAAKvF,UAAWT,KAAOoG,UAAvB,UAER,qBAAK3F,UAAWT,KAAOqG,WAAvB,SACyBX,EAAaY,QAAO,SAAAC,GAAC,MAAY,UAAVA,EAAEpE,SAAiBqE,KAAI,SAACD,EAAEE,GAAH,OAAO,cAAC,GAAD,CAAYd,WAAYA,EAAYrB,QAASA,EAAS6B,OAAQA,EAAwBO,OAAQH,GAAnB,QAAQE,QAGjJ,qBAAKhG,UAAWT,KAAO2G,gBAAvB,SACCjB,EAAac,KAAI,SAACI,EAAEH,GAAH,OAAQ,cAAC,GAAD,CAAcd,WAAYA,EAAYkB,WAAYf,EAAQC,KAAMa,GAAQ,QAAQA,EAAEX,wBAQ5H,IAAMa,GAAa,SAAC,GAAgC,IAAD,IAA9Bf,EAA8B,EAA9BA,KAAKc,EAAyB,EAAzBA,WAAWlB,EAAc,EAAdA,WACjC,EAA2BoB,IAAMvE,SAAS,MAA1C,mBAAOwE,EAAP,KAAeC,EAAf,KACMC,EAAYC,aAAaxC,EAAMC,sBAC/BwC,EAAOlF,aAAY,SAAAC,GAAK,OAAEkF,SAASlF,EAAMmF,KAAKC,QACpD,EAA8BR,IAAMvE,SAAS,GAA7C,mBAAOgF,EAAP,KAAoBC,EAApB,KA2BA,OA1BAV,IAAMhD,WAAU,WACZ,IAAO2D,EAAiB3B,EAAjB2B,QAAQC,EAAS5B,EAAT4B,QAELC,EAAQR,IAASM,EAAQC,EAAQD,EACxCR,EAAY,GAAG,CAACW,UAAU,CAAC7B,GAAG4B,OACnC,CAAC7B,EAAKqB,IAGRL,IAAMhD,WAAU,YACiB,OAAV4B,QAAU,IAAVA,OAAA,EAAAA,EAAYmC,eAAe7B,mBAA3B,OAA4CF,QAA5C,IAA4CA,OAA5C,EAA4CA,EAAME,iBACrDN,EAAWmC,eAAeC,aAA1B,OAAsCf,QAAtC,IAAsCA,OAAtC,EAAsCA,EAASe,aAE/Dd,EAAWtB,EAAWmC,gBACN,SAAb/B,EAAK5D,MACJsF,GAAS,SAAAb,GAAC,OAAEA,EAAE,KAEda,EAAS,MAIf,CAAC9B,EAAWI,EAAKiB,IACnBD,IAAMhD,WAAU,WACI,SAAbgC,EAAK5D,OACJsF,EAAS,KAEf,CAAC1B,EAAK5D,QACD,qBAAK1B,UAAWT,KAAOgI,WAAY9E,QAAS,WAAK2D,EAAWd,IAA5D,SACX,cAAC,GAAD,CAAarE,aAAc8F,EAAa,EAAEA,EAAa,KAAM7F,MAAM,YAAnE,SACA,cAACjC,EAAD,CAAQE,WAAU,UAAEsH,EAAY,UAAd,iBAAE,EAAgBnB,YAAlB,aAAE,EAAsBkC,mBAAmBC,QAAUrI,KAAK,gBAMtEsI,GAAW,SAAC,GAAsC,IAArChC,EAAoC,EAApCA,OAAOO,EAA6B,EAA7BA,OAAOpC,EAAsB,EAAtBA,QAAQqB,EAAc,EAAdA,WACrC,EAA2BoB,IAAMvE,SAAS,IAA1C,mBAAOwE,EAAP,KAAeC,EAAf,KACMG,EAAOlF,aAAY,SAAAC,GAAK,OAAEkF,SAASlF,EAAMmF,KAAKC,QACpD,EAAgCa,aAAYzD,EAAMU,cAAlD,mBAAOgD,EAAP,KAAsBtC,EAAtB,KAAsBA,KAChBmB,EAAYC,aAAaxC,EAAMC,sBACrC,EAA+BmC,IAAMvE,SAAS,IAA9C,mBAAO8F,EAAP,KAAiBC,EAAjB,KACA,EAAwBxB,IAAMvE,SAAS,IAAvC,mBAAOgG,EAAP,KAAgBC,EAAhB,KACM5H,EAAMmB,IACN0G,EAAQ3B,IAAMjD,OAAO,MAClB6E,EAAgBC,YAASjE,EAAMY,yBAAyB,CAACsC,UAAU,CAAC7B,GAAGU,EAAOT,gBAAgB4C,YAAY,aAEnH9B,IAAMhD,WAAU,WACR,IAAOgC,EAAM4C,EAAN5C,KAEP,UAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAM+C,cAAc,CACf,IAAMC,EAAO,YAAIhD,EAAK+C,eAC1B7B,GAAW,SAAA+B,GAAC,mBAAOD,SAE7B,CAACJ,IAEH5B,IAAMhD,WAAU,WACZ,UAAGgC,QAAH,IAAGA,OAAH,EAAGA,EAAMsC,YAAY,CACjB,IAAMY,EAAOlD,EAAKsC,YAElBpB,GAAW,SAAA+B,GACH,OAAGA,EAAEE,OAAO,EACLD,EAAOlB,YAAYiB,EAAEA,EAAEE,OAAO,GAAGnB,UAC1B,GAAN,mBAAWiB,GAAX,CAAaC,IAEVD,EAEJ,CAACC,SAGtB,CAAClD,IACHgB,IAAMhD,WAAU,WACZ,IAEqB,EAMf,GARuB,OAAV4B,QAAU,IAAVA,OAAA,EAAAA,EAAYmC,eAAe7B,kBAAiBS,EAAOT,iBAElEe,EAAQkC,OAAO,GACD,OAAVvD,QAAU,IAAVA,OAAA,EAAAA,EAAYmC,eAAeC,cAA3B,UAAuCf,EAAQA,EAAQkC,OAAO,UAA9D,aAAuC,EAA2BnB,YAGjEd,GAAW,SAAAL,GAAC,4BAAOA,GAAP,CAASjB,EAAWmC,oBAGpCb,EAAW,kBAACtB,QAAD,IAACA,OAAD,EAACA,EAAYmC,sBAAb,QAAiC,GAAjC,cAKlB,CAACnC,EAAWe,IACdK,IAAMhD,WAAU,WACZ,IAAO2D,EAAiBhB,EAAjBgB,QAAQC,EAASjB,EAATiB,QAELC,EAAQR,IAASM,EAAQC,EAAQD,EACxCR,EAAY,GAAG,CAACW,UAAU,CAAC7B,GAAG4B,OACnC,CAAClB,EAAOU,IAEVL,IAAMhD,WAAU,WAAK,IAAD,EACQ,GAAxB,UAAGmD,EAAY,UAAf,aAAG,EAAgBnB,OACfwC,EAAY,UAACrB,EAAY,UAAb,aAAC,EAAgBnB,KAAKkC,sBAExC,CAACf,IAENH,IAAMhD,WAAU,WACb,IAAsBoF,KAGPT,EAAQ1E,SAFZoF,UAAYD,EAAOE,eAG/B,CAACrC,IAcA,OAAO,sBAAKvG,UAAS,UAAKT,KAAOsJ,SAAZ,YAAuC,SAAf5C,EAAOvE,MAAenC,KAAOuJ,SAASvJ,KAAOwJ,YAAnF,UACC,sBAAK/I,UAAWT,KAAOyJ,OAAQrJ,MAAO,CAAC4C,gBAAgBnC,EAAMiB,gBAA7D,UACI,6BAAa,OAATwG,QAAS,IAATA,OAAA,EAAAA,EAAWoB,eAAc,YAC7B,wBAASjJ,UAAU,SAASyC,QAAS,WAAKiD,EAAOO,EAAOT,iBAAxD,kBACA,wBAAQxF,UAAU,SAASyC,QAAS,WAAKoB,EAAQoC,EAAOT,iBAAxD,sBAEJ,qBAAKxF,UAAWT,KAAO2J,KAAMlF,IAAKiE,EAAlC,SACI,qBAAKjI,UAAWT,KAAO4J,YAAanF,IAAKiE,EAAzC,SACC1B,EAAQR,KAAI,SAAAD,GAAC,OAAE,qBAAK9F,UAAWT,KAAO6J,YAAvB,SAAwF,cAAC,GAAD,CAAanJ,QAAiB,OAAT4H,QAAS,IAATA,OAAA,EAAAA,EAAWJ,UAAS,KAAMrG,KAAM0E,EAAEuD,QAASnI,MAAOyF,IAASb,EAAEa,UAAjI,QAAQb,EAAEwB,UAAU,IAAIrB,EAAOT,uBAI5F,qBAAKxF,UAAWT,KAAO+J,KAAvB,SACI,uBAAMC,SAzBH,SAACzD,GAEb,GADCA,EAAE0D,iBACAzB,EAASU,OAAO,EAAE,CACpB,IAAMgB,EAASxD,EAAOgB,UAAUN,EAAOV,EAAOiB,QAAQjB,EAAOgB,QAE3DwC,GAAU9C,IACZiB,EAAY,CAACR,UAAU,CAACT,OAAOA,EAAO8C,SAASA,EAASjE,eAAeS,EAAOT,eAAe6D,QAAQtB,KACrGC,EAAO,OAkBC,UACI,uBAAO0B,MAAO3B,EAAU4B,SAAU,SAAC7D,GAAKkC,EAAOlC,EAAE8D,OAAOF,QAASxG,KAAK,OAAO2G,UAAQ,EAAC9G,YAAY,uBAClG,wBAAS/C,UAAU,SAASkD,KAAK,SAAjC,2BAMd4G,GAAY,SAAC,GAAuB,IAAtB1I,EAAqB,EAArBA,KAAKF,EAAgB,EAAhBA,MAAMjB,EAAU,EAAVA,OACrB+D,EAAIsC,IAAMjD,SAMpB,OALIiD,IAAMhD,WAAU,YACV,OAAGU,QAAH,IAAGA,OAAH,EAAGA,EAAK+F,SACF/F,EAAIT,QAAQyG,mBAEtB,IACC,sBAAKhG,IAAKA,EAAKhE,UAAS,UAAKkB,EAAM3B,KAAOe,MAAMf,KAAO0K,KAA/B,YAAuC1K,KAAO2K,cAAtE,UACDhJ,EAAiD,6BAA3C,cAACjC,EAAD,CAAQE,WAAYc,EAAQb,KAAK,UAC1C,8BACA,4BAAIgC,UC9LQ,SAAS+I,GAAT,GAAyC,IAAjBxD,EAAgB,EAAhBA,OAAQ5F,EAAQ,EAARA,KAGvCqJ,GAFWhF,cAEU3D,aAAY,SAACC,GAAD,OAAWA,EAAM2I,QAAQhE,iBAChE,EAA+B8B,YAASjE,EAAMS,qBAAsB,CAClEyC,UAAW,CAAET,YADf,EAAQ2D,QAAR,EAAiBC,IAAjB,EAAsBjF,KActB,OACE,sBAAK3F,MAAO,CAAE6K,SAAU,YAAxB,UACE,cAAC1J,EAAD,CAAWC,KAAMA,IAIhBqJ,GACC,cAAC,GAAD,CACEnF,aAAcmF,EACdzD,OAAQA,OAQlB,IAAM8D,GAAW,SAAC,GAA8B,IAA5B9D,EAA2B,EAA3BA,OAAQ1B,EAAmB,EAAnBA,aACpByF,EAAWC,YAAgBzG,EAAMQ,eAAgB,CACrD0C,UAAW,CAAET,YAETiE,EAAYnJ,aAAY,SAAC8G,GAAD,OAAKA,EAAE8B,QAAQhE,aAAa,IAAI,QACxDlB,EAAWC,cAqBjB,OApBAkB,IAAMhD,WAAU,WACd,UAAIoH,QAAJ,IAAIA,OAAJ,EAAIA,EAAUpF,KAAM,CAElB,IAAMJ,EAAawF,EAASpF,KAAK+B,eACzBV,EAAqBzB,EAArByB,OAAQ8C,EAAavE,EAAbuE,SAEVoB,EAAO,CACXrF,eAAgBN,EAAWM,eAE3BsF,YAAa5F,EAAWmE,QACxBpC,QAAS8D,KAAKC,IAAIrE,EAAQ8C,GAC1BvC,QAAS6D,KAAKE,IAAItE,EAAQ8C,GAC1B/H,MAAO,SAES,OAAdkJ,IAAgC,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAapF,kBAAiBqF,EAAKrF,gBAE1DL,EAAS,CAAEjC,KAAM,kBAAmBuC,QAASoF,OAGhD,CAACH,IAEF,mCACE,cAAC1F,GAAD,CAAYC,aAAcA,EAAcC,WAAYwF,EAASpF,UCzDpD,SAAS4F,GAAT,GAA2B,IAAVvE,EAAS,EAATA,OACxBG,EAAMrF,aAAY,SAACC,GAAD,OAAWA,EAAMmF,KAAKC,OACxC1G,EAAMmB,IACN4J,EAAa1J,aAAY,SAAAC,GAAK,OAAEA,EAAMmF,KAAKsE,gBACjD,OACE,wBAAQxL,MAAO,CAAC4C,gBAAgBnC,EAAMM,WAAWQ,MAAMd,EAAMgB,MAAOpB,UAAWT,IAAO6L,OAAtF,SACE,sBAAKpL,UAAWT,IAAO8J,QAAvB,UACE,sBAAKrJ,UAAWT,IAAO8L,YAAa1L,MAAO,CAAC6C,QAAQ,OAAO8I,WAAW,UAAtE,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAACtM,EAAD,CAAQE,WAAYqM,MAEtB,cAAC,EAAD,OAGF,sBAAKxL,UAAWT,IAAOkM,kBAAoB9L,MAAO,CAAC6C,QAAQ,OAAO8I,WAAW,UAA7E,UACG3E,GAAQ,cAACwD,GAAD,CAAcpJ,KAAMwF,EAASI,OAAQA,IAC9C,cAAC7F,EAAD,CAAWC,KAAM2K,IAChB5E,GACC,cAAC,IAAD,CAAMyE,GAAE,gBAAWzE,GAAnB,SACE,cAAC7H,EAAD,CAAQE,WAAYgM,cC3BnB,SAASQ,GAAT,GAA6B,IAAZC,EAAW,EAAXA,SACtBjF,EAAOlF,aAAY,SAAAC,GAAK,OAAEA,EAAMmF,KAAKC,OACrC1G,EAAMmB,IACN5B,EAAM,CACR4C,gBAAgBnC,EAAMM,WACtBmL,cAAc,OACdhM,gBAAgB,QAAD,OAASO,EAAMP,gBAAf,MACfiM,mBAAmB,WACnBC,eAAe,QACfC,qBAAqB,QACrBC,UAAU,SAEd,OACI,sBAAKtM,MAAOA,EAAZ,UAEI,cAACuL,GAAD,CAAQvE,OAAQA,IACfiF,K,qDCtBE,OAA0B,oCCUnCM,GAAQ5F,IAAM6F,MAAK,kBAAI,iCACd,SAASC,GAAT,GAAmC,IAAhBvF,EAAe,EAAfA,KAAKwF,EAAU,EAAVA,QAC7BlH,EAAWC,cACXhF,EAAMmB,IACZ,EAA6B+E,IAAMvE,UAAS,GAA5C,mBAAOuK,EAAP,KAAgBC,EAAhB,KACMC,EAAU/K,aAAY,SAAAC,GAAK,OAAEA,EAAMmF,QACzC,EAAgCc,aAAYzD,EAAMW,cAAlD,mBAAO4H,EAAP,KAAyBnH,EAAzB,KAAyBA,KAkBzB,OALAgB,IAAMhD,WAAU,YACZ,OAAGgC,QAAH,IAAGA,OAAH,EAAGA,EAAMmH,mBACLtH,EAAS,CAACjC,KAAK,kBAAkBuC,QAAQ,2BAAIH,EAAKmH,kBAAV,IAA2B/K,MAAM,cAE/E,CAAC4D,IAEC,sBAAKtF,UAAWT,KAAOoG,UAAvB,UACA,cAAC,WAAD,CAAU+G,SAAU,cAAC,GAAD,IAApB,SAEA,cAACR,GAAD,CAAStI,KAAM0I,EAAUzI,QAAS,WAAK0I,GAAY,QAEnD,qBAAKvM,UAAWT,KAAOoN,UAAWhN,MAAO,CAAC4C,gBAAgB,QAAD,OAASnC,EAAMM,WAAf,SAAzD,SACD,sBAAKV,UAAWT,KAAOqN,MAAvB,UACA,cAAC3N,EAAD,CAAQG,KAAK,QAAQD,WAAYkN,EAAO,OAACG,QAAD,IAACA,OAAD,EAACA,EAAWrB,aAAZ,OAAyBtE,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAMY,UACtE,4BAAI4E,EAAO,OAACG,QAAD,IAACA,OAAD,EAACA,EAAWK,SAAZ,OAAqBhG,QAArB,IAAqBA,OAArB,EAAqBA,EAAMoC,eACtC,wBAAQxG,QA1Ba,WACrB,IAAMkE,EAAOC,SAAS4F,EAAU1F,KAC1B2C,EAAS7C,SAASC,EAAKF,QAC7B,GAAGA,IAAS8C,EAAS,CACjB,IAAMqD,EAAM/B,KAAKC,IAAIrE,EAAO8C,GACtBsD,EAAOhC,KAAKE,IAAItE,EAAO8C,GAC7BgD,EAAiB,CAACrF,UAAU,CAACH,QAAQ6F,EAAM5F,QAAQ6F,OAoBvD,0BAGG,qBAAK/M,UAAWT,KAAOmB,WAAvB,SACI,wBAAQ+B,QAAS,WAAK8J,GAAY,IAAlC,SAA0C,qBAAK3J,MAAO,GAAIC,IAAKmK,YAM9E,IAAMC,GAAS,WACX,OAAO,8B,oBCvDI,OAA0B,qCCA1B,OAA0B,yC,oBCG1B,SAASC,GAAT,GAAkD,IAA3BC,EAA0B,EAA1BA,MAAM9H,EAAoB,EAApBA,OAAoB,EAAbe,WAC/C,OACI,sBAAK3D,QAAS4C,EAAQrF,UAAS,UAAKT,KAAOoG,UAAZ,YAAwC,IAAfwH,EAAM1E,OAAWlJ,KAAO6N,OAAO7N,KAAO8N,MAA9F,UACI,cAAC,GAAD,CAAYF,MAAOA,EAAM,KACxBA,EAAM1E,QAAQ,GAAG,cAAC,GAAD,CAAYwB,KAAMkD,EAAM1E,OAAO,EAAG0E,MAAOA,EAAM,QAQ7E,IAAMG,GAAW,SAAC,GAAgB,IAAfH,EAAc,EAAdA,MAAMlD,EAAQ,EAARA,KACXsD,EAAQJ,EAAMjK,KAAKsK,MAAM,UAE/B,OAAO,qBAAKxN,UAAWT,KAAOkO,eAAgB9N,MAAO,CAACE,gBAAgB0N,EAAQ,GAAD,eAAY3O,EAAYuO,GAAxB,MAAmCvK,MAAM,OAAO8K,OAAO,QAA7H,SAEFzD,EAAK,GAAG,qBAAKjK,UAAWT,KAAOoO,YAAvB,SACL,8BAAI1D,EAAJ,Y,gDChBD,SAAS2D,GAAT,GAAgC,IAATtI,EAAQ,EAARA,KACpC,EAAqBgB,IAAMvE,SAAS,IAApC,mBAAO8E,EAAP,KAAYgH,EAAZ,KAEFvH,IAAMhD,WAAU,WACVuK,EAAQvI,EAAKuB,QAEjB,CAACvB,IAED,MAA8BgB,IAAMvE,UAAS,GAA7C,mBAAO+L,EAAP,KAAgBC,EAAhB,KACA,cAAIzI,QAAJ,IAAIA,OAAJ,EAAIA,EAAM+D,SAEN,sBAAKrJ,UAAWT,KAAO6J,YAAvB,UACN,qBAAKpJ,UAAWT,KAAOyO,UAAvB,SACA,cAAC,IAAD,CAAMzC,GAAE,gBAAWjG,EAAKqB,QAAxB,SACA,cAAC1H,EAAD,CAAQE,WAAU,OAAE0H,QAAF,IAAEA,OAAF,EAAEA,EAAMY,cAGlB,8BACA,oBAAGzH,UAAWT,KAAO0O,QAArB,UACE,cAAC,IAAD,CAAM1C,GAAE,gBAAWjG,EAAKqB,QAAxB,SACF,wCAASE,QAAT,IAASA,OAAT,EAASA,EAAMoC,iBAEf,uBACG3D,EAAK+D,QAAQZ,OAxBN,KAwB6BqF,EACjCxI,EAAK+D,QAAQ6E,UAAU,EAzBnB,IA0BJ5I,EAAK+D,QACR/D,EAAK+D,QAAQZ,OA3BN,IA4BN,uBACEhG,QAAS,WACPsL,GAAW,SAACxF,GAAD,OAAQA,MAErB5I,MAAO,CAAEuB,MAAO,QAJlB,oBAMU4M,EAAU,OAAS,UAG/B,uBACoB,uBAAM9N,UAAWT,KAAO4O,aAAxB,UAAuCC,GAAc9I,EAAK+I,aAA1D,IAAwE,sBAAM1O,MAAO,CAACuB,MAAM,OAAOoN,WAAW,IAAtC,gCAW7F,6BAGT,SAASF,GAAcG,GACrB,IAAIC,EAAaD,EAAe,IAC9BE,EAAI,IAAIC,KAAK,GAEjB,OADAD,EAAEE,cAAcH,GACTC,EAAEG,eClDM,SAASC,GAAT,GAA+D,IAA5CC,EAA2C,EAA3CA,eAAgBzJ,EAA2B,EAA3BA,OAAQxB,EAAmB,EAAnBA,QAASkL,EAAU,EAAVA,OACjE,EAA8BzI,IAAMvE,SAAS,IAA7C,mBAAOkM,EAAP,KAAgBe,EAAhB,KACA,EAA8B1I,IAAMvE,UAAS,GAA7C,mBAAOkN,EAAP,KAAeC,EAAf,KAGMC,EAAezI,aAAaxC,EAAMK,wBAAwB,CAAG6D,YAAa,aAE1EgH,EAAezH,aAAYzD,EAAMM,aAAa,CAAC4D,YAAY,aAC3DiH,EAAQ/I,IAAMjD,OAAO,MACrBiM,EAAS7N,aAAY,SAACC,GAAD,OAAWA,EAAMmF,KAAKC,OAClD,EAA6BR,IAAMvE,UAAS,GAA5C,mBAAOwN,EAAP,KAAkBC,EAAlB,KACM3N,EAAWC,YAAc,sBAE9BwE,IAAMhD,WAAU,gBACGmM,IAAX5N,GAAmC,OAAXA,GAExB2N,KADC3N,IAAUwD,GAASyJ,MAM1B,CAACjN,EAASiN,EAAezJ,IAE3BiB,IAAMhD,WAAU,WACV+B,GACF6J,GAAY,KAEb,CAAC7J,IACJ,IAAMqK,EAAgB,SAACJ,EAAQP,GAC7B,gDAAO,WAAOd,GAAP,gBAAA0B,EAAA,sDACCC,EAAa,CACjB3B,QAAS,CAAE5E,QAAS4E,EAAStH,OAAQ2I,EAAQO,OAAQd,IAEvDK,EAAe,GAAG,CAAChI,UAAUwI,EAAW3B,UAJnC,2CAAP,uDAmBF,OAXA3H,IAAMhD,WAAU,WACV2L,GACFE,EAAe,GAAG,CAAC/H,UAAU,CAACyI,OAAOd,OAEtC,CAACE,EAAQF,IACZzI,IAAMhD,WAAU,WACd,IAAMgC,EAAK6J,EAAe,GAAG7J,KAC1BA,GACD0J,GAAW,SAAAzG,GAAC,4BAAOA,GAAP,YAAYjD,EAAKwK,0BAE/B,CAACX,EAAe,GAAG7J,OACjB2I,EAEA,sBACEjK,IAAKqL,EACLrP,UAAS,UAAKT,KAAOoG,UAAZ,YACPN,EAAS9F,KAAOqE,KAAOrE,KAAO0E,MADvB,YAEL6K,EAAiBvP,KAAOuP,eAAiB,IAJ/C,UAOGzJ,EAAOkK,EAAW,cAAC,GAAD,CACfG,cAAeA,EAAcJ,EAAQP,GACrCgB,SAAU9B,EACVpK,QAASA,EACTzB,QAAQ,IAEV,cAAC,GAAD,CACEsN,cAAeA,EAAcJ,EAAQP,GACrCgB,SAAU9B,EACVpK,QAASA,IACR,6BAMJwB,GAAQ0J,GAAQ,cAAC,GAAD,CAAiBvG,OAAQwG,EAAYa,OAAQd,OAK7D,sBAGT,IAAMiB,GAAgB,SAAC,GAAkD,IAAhD5N,EAA+C,EAA/CA,OAAQyB,EAAuC,EAAvCA,QAASkM,EAA8B,EAA9BA,SAAUL,EAAoB,EAApBA,cAC5C1L,EAAMsC,IAAMjD,OAAO,MASzB,OACE,cAACK,EAAA,EAAD,CAAQC,OAAQ,SAAUC,KAAMxB,EAAQyB,QAASA,EAAjD,SACE,sBAAK7D,UAAWT,KAAO0Q,cAAvB,UACE,uBAAM1G,SAXK,SAACzD,GAChBA,EAAE0D,iBAC+B,KAA7BxF,EAAIT,QAAQmG,MAAMwG,QACpBR,EAAc1L,EAAIT,QAAQmG,OAAOyG,MAAK,SAACC,GACrCpM,EAAIT,QAAQmG,MAAQ,OAOM1J,UAAWT,KAAO8Q,YAA5C,UACE,uBAAOrM,IAAKA,EAAKd,KAAK,SACtB,wBAAQA,KAAK,SAAb,qBAED6M,EAAShK,KAAI,SAACuK,GAAD,OACZ,cAAC1C,GAAD,CACEtI,KAAMgL,GADR,yBAEyBA,EAAIC,UAF7B,YAE0CD,EAAIT,OAF9C,YAEwDS,EAAI3J,kBAOhE6J,GAAgB,SAAC,GAA0C,IAAxCT,EAAuC,EAAvCA,SAAmBL,GAAoB,EAA7B7L,QAA6B,EAApB6L,eACpC1L,EAAMsC,IAAMjD,OAAO,MAUzB,OACE,gCACE,uBAAMkG,SAVO,SAACzD,GAChBA,EAAE0D,iBAC+B,KAA7BxF,EAAIT,QAAQmG,MAAMwG,QACpBR,EAAc1L,EAAIT,QAAQmG,OAAOyG,MAAK,SAACC,GACrCpM,EAAIT,QAAQmG,MAAQ,OAMI1J,UAAWT,KAAO8Q,YAA5C,UACE,uBAAOrM,IAAKA,EAAKd,KAAK,SACtB,wBAAQA,KAAK,SAAb,qBAED6M,EAAShK,KAAI,SAACuK,GAAD,OACZ,cAAC1C,GAAD,CAEEtI,KAAMgL,GAFR,yBACyBA,EAAIC,UAD7B,YAC0CD,EAAIT,OAD9C,YACwDS,EAAI3J,YAK9D,wDAIA8J,GAAgB,SAAC,GAAmB,IAAlBZ,EAAiB,EAAjBA,OAAOrH,EAAU,EAAVA,OAC7B,EAAqBmC,YAAgBzG,EAAMO,eAAe,CAAC2C,UAAU,CAACyI,OAAOA,KAAtEvK,EAAP,EAAOA,KAAP,EAAYgF,QAOZ,OANDhE,IAAMhD,WAAU,WACboN,QAAQC,IAAIrL,IACZ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAMsL,aACPpI,GAAO,SAAAD,GAAC,OAAIjD,EAAKsL,YAAT,mBAAuBrI,SAEjC,CAACjD,IACI,8BCxJF,SAAS8I,GAAcG,GAC1B,IAAIC,EAAaD,EAAe,IAC9BE,EAAI,IAAIC,KAAK,GAEjB,OADAD,EAAEE,cAAcH,GACTC,EAAEG,eCLX,IAAMiC,GAAShS,IAAIG,IAAM,UAGnB8R,GAAgB,SAAC,GAAD,IAAEnK,EAAF,EAAEA,OAAOkJ,EAAT,EAASA,OAAOkB,EAAhB,EAAgBA,SAAhB,sDACMpK,EADN,mBACuBkJ,EADvB,qBAC0CkB,EAD1C,yDAShBC,GAAqB,SAAC,GAAD,IAAErK,EAAF,EAAEA,OAAOkJ,EAAT,EAASA,OAAT,0DACSlJ,EADT,mBAC0BkJ,EAD1B,8BAKrBoB,GAAgB,SAAC,GAAD,IAAEtK,EAAF,EAAEA,OAAOkJ,EAAT,EAASA,OAAT,sDACOlJ,EADP,mBACwBkJ,EADxB,4DA0ChBqB,GAAQ,yCAAC,WAAMC,GAAN,UAAAxB,EAAA,sEACAyB,GAASN,GAAgBK,IADzB,mFAAD,sDAGRE,GAAe,yCAAC,gCAAA1B,EAAA,6DAAOhJ,EAAP,EAAOA,OAAOkJ,EAAd,EAAcA,OAAd,SACLuB,GAASJ,GAAqB,CAACrK,SAAOkJ,YADjC,mFAAD,sDAGfyB,GAAU,yCAAC,gCAAA3B,EAAA,6DAAOhJ,EAAP,EAAOA,OAAOkJ,EAAd,EAAcA,OAAd,SACFuB,GAASH,GAAgB,CAACtK,SAAOkJ,YAD/B,mFAAD,sDAKVuB,GAAQ,yCAAG,WAAMG,GAAN,UAAA5B,EAAA,+EAEA6B,MAAMX,GAAQ,CACzBY,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBxI,KAAMyI,KAAKC,UAAU,CAAEL,MAAOA,MAE7BpB,MAAK,SAAC0B,GACL,OAAOA,EAASC,UAVP,iGAcN,CAACvH,IAAI,EAAD,KAdE,wDAAH,sDC1DRrK,GAAcC,aAAW,SAACC,GAAD,MAAY,CACzCC,MAAO,CACLC,MAAO,EACPC,IAAK,GACLC,OAAO,aAAD,OAAeJ,EAAMK,QAAQC,WAAWC,OAC9CC,QAAS,QACT2B,gBAAiB,cANDpC,CAQhBU,KAEW,SAASkR,GAAT,GAKX,IA8DQ,MAlEVzM,EAIC,EAJDA,KACAD,EAGC,EAHDA,OAGC,IAFDnC,YAEC,MAFM,UAEN,EADD8O,EACC,EADDA,WAEA,EAA8BjQ,oBAAS,GAAvC,mBAAOkQ,EAAP,KAAgBC,EAAhB,KACA,EAAqCnQ,mBAAgB,YAAPmB,GAA9C,mBAAOiP,EAAP,KAAmBC,EAAnB,KACA,EAA2BrQ,mBAAS,MAApC,mBAAOsQ,EAAP,KAAgBC,EAAhB,KACA,EAA0BvQ,oBAAS,GAAnC,mBAAOwQ,EAAP,KAAeC,EAAf,KACA,EAA8BzQ,mBAAS,GAAvC,mBAAO0Q,EAAP,KAAkBzL,EAAlB,KACML,EAASlF,aAAY,SAACC,GAAD,OAAWA,EAAMmF,KAAKC,OAC3C1G,EAAMmB,IAuDZ,OAtDA+E,IAAMhD,WAAU,WACVqD,GAAUrB,EAAKuK,QACjBwB,GAAgB,CAAE1K,OAAQA,EAAQkJ,OAAQvK,EAAKuK,SAAUM,MAAK,SAACC,GAC7D,GAAIA,EAAI9K,KAAM,CACZ,IAAMoN,EAAUtC,EAAI9K,KAAKqN,kBAAkBD,QAEzCJ,IADEI,GAKJ1L,EAASJ,SAAStB,EAAKsN,iBAEvBN,EAAQ,WAIb,CAAChN,IAEJgB,IAAMhD,WAAU,WACViP,KACc,IAAZF,EACFnB,GAAS,CAAEvK,OAAQA,EAAQkJ,OAAQvK,EAAKuK,OAAQkB,SAAU,IAAKZ,MAC7D,SAACC,GACKA,EAAI9K,OACNgN,GAAQ,GAERtL,GAAS,SAACb,GAAD,OAAOA,EAAI,UAIL,IAAZkM,GACTf,GAAW,CAAE3K,OAAQA,EAAQkJ,OAAQvK,EAAKuK,SAAUM,MAAK,SAACC,GACpDA,EAAI9K,OACNgN,GAAQ,GAERtL,GAAS,SAACb,GAAD,OAAOA,EAAI,YAK3B,CAACoM,IAEJjM,IAAMhD,WAAU,WAEd,IAAIqM,EAMJ,OALgB,OAAZ0C,IACF1C,EAAIkD,YAAW,WACbL,GAAQ,KACP,MAEE,WACLM,aAAanD,MAEd,CAAC0C,IACA/M,EAEA,mCACE,sBAAK3F,MAAK,2BAAMqS,GAAN,IAAiBzP,gBAAgBnC,EAAMiB,eAAeH,MAAMd,EAAMgB,OAAOpB,UAAWT,KAAOoG,UAAWoN,SAAS,IAAzH,UAGE,sBAAK/S,UAAWT,KAAOoN,UAAvB,UACE,cAAC,IAAD,CAAMpB,GAAE,uBAAWjG,QAAX,IAAWA,OAAX,EAAWA,EAAMqB,QAAzB,SACE,cAAC1H,EAAD,CAAQE,WAAU,iBAAEmG,QAAF,IAAEA,GAAF,UAAEA,EAAMuB,YAAR,aAAE,EAAYY,eAAd,QAAyB,KAAMrI,KAAK,aAGxD,sBAAKY,UAAWT,KAAOyT,UAAvB,UACE,cAAC,IAAD,CAAMzH,GAAE,uBAAWjG,QAAX,IAAWA,OAAX,EAAWA,EAAMqB,QAAzB,SACE,6BAAQ,OAAJrB,QAAI,IAAJA,GAAA,UAAAA,EAAMuB,YAAN,eAAYoC,eAAgB,OAElC,4BAAImF,GAAc9I,EAAK+I,qBAK3B,sBAAK1L,MAAM,qBAAqB3C,UAAWT,KAAO0T,YAAlD,UACE,8BACIhB,EAA2C3M,EAAK+D,QAAtC/D,EAAK+D,QAAQ6E,UAAU,EAAG,KACtC,uBACEvO,MAAO,CACLuB,MAAO,OACPsB,QAAS8C,EAAK+D,QAAQZ,OAAS,IAAM,OAAS,IAEhDhG,QAAS,SAACqD,GACRoM,GAAW,SAACxQ,GAAD,OAAYA,KAEnBuQ,GACFY,YAAW,WACT/M,EAAE8D,OAAOI,eAAe,CACtBkJ,SAAU,SACVC,MAAO,MACPC,OAAQ,cAET,KAfT,oBAmBUnB,EAAU,OAAS,aAGd,QAAZ,OAAJ3M,QAAI,IAAJA,OAAA,EAAAA,EAAM6H,QAA2B,YAATjK,EACvB,cAACgK,GAAD,CAAc7H,OAAQA,EAAQ8H,MAAOwE,KAAK0B,MAAM/N,EAAK6H,SAErD,gCAIJ,sBAAKnN,UAAWT,KAAO+T,aAAvB,UACE,wBACEC,SAAUhB,GAAsB,OAAZF,EACpBrS,UAAU,cACVyC,QAAS,WACP+P,GAAQ,IAJZ,SAOE,cAAC,GAAD,CACEvR,aAAcwR,EACdvR,MAAM,YAFR,SAIE,cAACjC,EAAD,CAAQE,WAAYkT,EAAUmB,GAAWrC,GAAM7R,OAAO,QAI1D,wBACA,mBACEK,MAAO,CAAE8T,OAAQ,WACjBhR,QAAS,WAEL2P,GAAe,SAAC7J,GAAD,OAAQA,MAJ7B,yBAWF,cAACsG,GAAD,CACES,OAAQhK,EAAKqB,OACboI,OAAQzJ,EAAKuK,OACbxK,OAAQ8M,EACRtO,QAAS,WACPuO,GAAe,IAEjBtD,eAAyB,YAAT5L,SAMnB,6B,4CCvLM,OAA0B,iCCA1B,OAA0B,oCCK1B,SAASwQ,GAAT,GAAiC,IAAVvG,EAAS,EAATA,MACpC,EAA0B7G,IAAMvE,SAAS,GAAzC,mBAAOP,EAAP,KAAcmS,EAAd,KACMC,EAAetN,IAAMjD,OAAO,MAClC,EAAmCiD,IAAMvE,SAAS,CAACa,MAAM,EAAE8K,OAAO,IAAlE,mBAAOmG,EAAP,KAAqBC,EAArB,KACMC,EAAW,SAACC,GAAD,OAAS,WACxBL,GAAS,SAACM,GAAD,MACC,MAARD,EAAcjJ,KAAKC,IAAIiJ,EAAM,EAAG9G,EAAM1E,OAAS,GAAKsC,KAAKE,IAAIgJ,EAAM,EAAG,QA0B1E,OAvBA3N,IAAMhD,WAAU,WAEZ,IAAM4Q,EAAc,WAGhB,IAAMC,EAASP,EAAarQ,QAAQ6Q,YAC9BC,EAAUT,EAAarQ,QAAQ+Q,aACnCR,EAAa,CAAClR,MAAMuR,EAASzG,OAAO2G,KAQ1C,OALAH,IAEEK,OAAOC,iBAAiB,SAASN,GAG7B,WAEFK,OAAOE,oBAAoB,SAASP,MAIzC,CAAC1S,IAGF,sBAAKxB,UAAWT,KAAOoG,UAAW3B,IAAK4P,EAAvC,UACGpS,EAAQ,GACP,wBAAQiB,QAASsR,EAAS,KAAM/T,UAAWT,KAAOmV,KAAlD,SACE,qBAAKhS,IAAI,UAAUG,IAAK8R,OAG5B,cAAC,GAAD,CAAMC,aAAcf,EAAgB1G,MAAOA,EAAM3L,KAChDA,EAAQ2L,EAAM1E,OAAS,GACtB,wBAAQhG,QAASsR,EAAS,KAAM/T,UAAWT,KAAOsV,MAAlD,SACE,qBAAKnS,IAAI,aAAaG,IAAKiS,UAMrC,IAAMC,GAAQ,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOJ,EAAkB,EAAlBA,aAChBK,EAAQ3O,IAAMjD,OAAO,MAC3B,EAA+BiD,IAAMvE,UAAS,GAA9C,mBAAOmT,EAAP,KAAiBC,EAAjB,KACA,OACE,qBACInR,IAAKiR,EACLG,OAAQ,SAACtP,GACT,IAAMkP,EAAMlP,EAAE8D,OACRyL,EAAUL,EAAMZ,YAChBkB,EAAWN,EAAMV,aACpBe,EAAYT,EAAahS,OAC1BuS,GAAa,GAEZG,EAAWV,EAAalH,QACzByH,GAAa,IAIfxV,MAAO,CAAC4V,WAAW,QACrB7S,IAAI,YACJ1C,UAAWkV,EAAU3V,KAAOiW,WAAWjW,KAAOkW,YAC9C5S,IAAKjE,EAAYoW,MAKjBU,GAAQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,uBACEC,UAAQ,EACR5V,UAAWT,KAAOmW,MAClB7S,IAAKjE,EAAY+W,MAIjBE,GAAO,SAAC,GAA4B,IAA1B1I,EAAyB,EAAzBA,MAAOyH,EAAkB,EAAlBA,aACrB,OAAIzH,EAAMjK,KAAKsK,MAAM,UACZ,cAAC,GAAD,CAAOmI,MAAOxI,IAEhB,cAAC,GAAD,CAAOyH,aAAcA,EAAeI,MAAO7H,KC5FrC,OAA0B,qCCM1B,SAAS2I,GAAT,GAAyD,IAAD,IAAjClS,YAAiC,SAAtBC,EAAsB,EAAtBA,QAAsB,IAAdgM,cAAc,MAAP,KAAO,EACnE,EAAqB9N,mBAAS,IAA9B,mBAAOgU,EAAP,KAAYC,EAAZ,KAyBA,OAxBA1P,IAAMhD,WAAU,WAGR2S,SAAS/M,KAAKvJ,MAAMuW,SADlBtS,EAC6B,SAEA,KAIrC,CAACA,IACH0C,IAAMhD,WAAU,WAUZ,OATGuM,GAAQ,GNgCC,SAACA,GACnB,IACE,OAAOuB,GAvBW,SAACvB,GAAD,qDACYA,EADZ,2MAuBFsG,CAAgBtG,IAChC,MAAOtF,GACP,MAAO,CAAEA,IAAKA,IMnCN6L,CAAYvG,GAAQM,MAAK,SAAAC,GAClBA,EAAI9K,MAEC0Q,EAAQ5F,EAAI9K,KAAK+Q,2BAK1B,WACHJ,SAAS/M,KAAKvJ,MAAMuW,SAAW,MAErC,CAACtS,EAAKiM,IACLjM,EACS,mCAEP,qBAAM5D,UAAWL,KAAMgG,UAAvB,SACMoQ,EAAKlG,QAAS,sBAAK7P,UAAS,UAAKL,KAAM2W,YAAX,YAAuC,OAAbP,EAAK5I,MAAaxN,KAAM4W,SAAS5W,KAAM6W,SAA/E,UACC,QAAV,OAAJT,QAAI,IAAJA,OAAA,EAAAA,EAAM5I,QAAc,sBAAKnN,UAAWL,KAAM8W,YAAtB,UACpB,wBAAQzW,UAAWL,KAAM+W,YAAajU,QAASoB,EAA/C,SACI,qBAAKhB,IAAK8T,GAAUjU,IAAI,iBAG5B,cAACgR,GAAD,CAAavG,MAAOwE,KAAK0B,MAAM0C,EAAK5I,YAEjC,cAAC4E,GAAD,CAAM7O,KAAK,SAASoC,KAAMyQ,WAOlC,6B,aC5CI,SAASa,GAAT,GAAwD,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SAA4B,IAAnBC,aAAmB,SAAPjQ,EAAO,EAAPA,IAC7D,EAAwB/E,oBAAS,GAAjC,mBAAO6B,EAAP,KAAavB,EAAb,KACA,EAAkCN,mBAAS,MAA3C,mBAAOiV,EAAP,KAAoBC,EAApB,KACA,EAA2BlV,oBAAS,GAApC,mBACMmV,GADN,UACiBxQ,aAAaxC,EAAMG,gBAAgB,CAAC+D,YAAa,cAC5D+O,EAAYzQ,aAAaxC,EAAMI,qBAAqB,CAAC8D,YAAa,aA0BrE9E,qBAAU,WACJwD,GAAK,IAAa,IAARiQ,EAETI,EAAY,GAAG,CAAC/P,UAAU,CAACT,OAAOG,KAGlCoQ,EAAW,OAEjB,CAACpQ,EAAIiQ,IACPzQ,IAAMhD,WAAU,WACd,IAAMgC,EAAK4R,EAAW,GAAG5R,KACtBA,GACDwR,EAASxR,EAAK8R,iBAEhB,CAACF,IACH5Q,IAAMhD,WAAU,WACd,IAAMgC,EAAK6R,EAAY,GAAG7R,KACvBA,GACAwR,EAASxR,EAAK+R,yBAEjB,CAACF,IACL,IAAMG,EAAc,SAAC9V,GACnB,OAAO,WACLa,GAAQ,GACR4U,EAAWJ,EAAMrV,GAAOqO,UAG5B,OAAIgH,EAAMpO,OAAO,EAEb,gCACGuO,GAAa,cAAClB,GAAD,CACZlS,KAAMA,EACNiM,OAAQmH,EAERnT,QAAS,WACPxB,GAAQ,MAITwU,EAAM9Q,KAAI,SAACT,EAAM9D,GAAP,OACT,cAACuQ,GAAD,CACIC,WAAY,CAACuF,aAAa,IAC5BlS,OAAQiS,EAAY9V,GAEpB8D,KAAMA,GADD,WAAaA,EAAKuK,cAQ5B,6B,wBCzFM,OAA0B,oCCA1B,OAA0B,kC,8BCOzC,SAAS2H,GAAT,GAAqC,IAAlB9N,EAAiB,EAAjBA,MAAM+N,EAAW,EAAXA,SAEvB,OACE,qBAAKzX,UAAWT,KAAOmY,cAAvB,SACE,0BACEhO,MAAOA,EACPC,SAAU,SAAC7D,GACT2R,EAAS3R,EAAE8D,OAAOF,YAM5B,SAASiO,GAAT,GAA4C,IAArBC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,YACnBC,EAAWC,uBAAY,SAACvW,GAC5B,OAAO,WACHqW,GAAY,SAAAnW,GAAK,OAAEA,EAAMmE,QAAO,SAACmS,EAAKhS,GAAN,OAAUxE,IAAQwE,WAExD,CAAC6R,IACH,OAAO,qBAAK7X,UAAWT,KAAO0Y,kBAAvB,SACFL,EAAM7R,KAAI,SAACiS,EAAKxW,GAAN,OAAc,cAAC0W,GAAD,CAAiCC,SAAUL,EAAWtW,GAAQA,MAAOA,EAAM,EAAGwW,KAAMA,GAAlE,QAAQxW,QAIzD,SAAS0W,GAAT,GAA4C,IAAtBF,EAAqB,EAArBA,KAAKxW,EAAgB,EAAhBA,MAAM2W,EAAU,EAAVA,SAC7B,EAAmBpW,mBAAS,IAA5B,mBAAO/C,EAAP,KAAWoZ,EAAX,KAiBI,OATJ9U,qBAAU,WACN,IAAM+U,EAAS,IAAIC,WACzBD,EAAO7D,iBAAiB,QAAQ,SAAC+D,GAChC,IAAM1V,EAAK0V,EAAM3O,OAAO4O,OAEvBJ,EAAOvV,KACP,IACFwV,EAAOI,cAAcT,KAChB,CAACA,IACO,sBAAKU,WAAS,EAAC/Y,MAAK,aAAGE,gBAAgB,OAAD,OAAQb,EAAR,MAhBnC,CACV8M,mBAAmB,SACnBC,eAAe,QACfvJ,QAAQ,OACR8I,WAAW,WACXqN,eAAe,kBAWR,UACH,cAAC9X,EAAA,EAAD,CAAQI,aAAcO,EAAON,MAAM,YAAnC,SACA,qBAAKvB,MAAO,CAAC+N,OAAO,GAAG9K,MAAM,QAG7B,wBAAQH,QAAS0V,EAAUxY,MAAO,CAAC4C,gBAAgB,sBAAsBrB,MAAM,SAAUlB,UAAU,SAAnG,uBAMG,SAAS4Y,GAAT,GAA2C,IAAvB/U,EAAsB,EAAtBA,QAAQgV,EAAc,EAAdA,WACnCzY,EAAMmB,IACV,EAAsC+E,IAAMvE,SAAS,IAArD,mBAAO+W,EAAP,KAAoBC,EAApB,KACIlS,EAAKpF,aAAY,SAAAC,GAAK,OAAEA,EAAMmF,QAC9BmS,EAAU3V,iBAAO,MACvB,EC9DK,WACH,MAAsBtB,mBAAS,IAA/B,mBAAO6V,EAAP,KAAaqB,EAAb,KAMA,MAAO,CAACrB,EALS,SAAS9R,GAAG,IAAD,iBACNA,EAAE8D,OAAOgO,OADH,yBACdI,EADc,QAEpBiB,GAAQ,SAACvX,GAAD,4BAAcA,GAAd,CAAoBsW,QADhC,2BAAkC,IADV,gCAKHiB,GDuDYC,GAAvC,mBAAOtB,EAAP,KAAauB,EAAb,KAAwBtB,EAAxB,KACA,EAA6B9V,oBAAS,GAAtC,mBAAOqX,EAAP,KAAgBC,EAAhB,KAGA,EAAuBtX,oBAAS,GAAhC,mBAAOwQ,EAAP,KAAcC,EAAd,KACA,EAAyBzQ,mBAAS,CAACwE,QAAQ,KAA3C,mBAAO+S,EAAP,KAAcC,EAAd,KACMC,EAAczB,uBAAY,SAACrO,GAC5B4P,EAAO/S,SACRgT,EAAU,CAAChT,QAAQ,KAErBwS,EAAerP,KACf,CAAC6P,EAAUR,EAAeO,EAAO/S,UAC7BkT,EAAqB1B,uBAAY,WACrCiB,EAAQzV,QAAQmW,UAChB,CAACV,IACGW,EAAc5B,uBAAY,SAACjS,GAC/BjC,MACA,CAACA,IACG+V,EAAO7B,uBAAY,WAEvBvF,GAAQ,GACR+G,EAAU,CAAChT,QAAQ,eACpB,IAuCD,OAtCAjD,qBAAU,WACR,IAAY,IAATiP,EACD,GAAG1L,EAAKC,KAAOgS,EAAY5I,OAAOzH,OAAO,CACvC,IAAInD,EAAO,IAAIuU,SACfvU,EAAKwU,OAAO,UAAWhB,GACvBxT,EAAKwU,OAAO,QAASlC,EAAMnP,QAC3BnD,EAAKwU,OAAO,MAAOjT,EAAKC,KACxB8Q,EAAMmC,SAAQ,SAAC/B,GACX1S,EAAKwU,OAAL,UAAsB9B,MAI1BgC,KAAIC,SAAS3U,GAAM6K,MAAK,SAAAC,GACpB,GAAGA,EAAIP,OAAO,CACZ,IAAMqK,EAAQ,2BACT9J,GADQ,IAEXvJ,KAAK,CACDF,OAAOE,EAAKC,IACZmC,aAAapC,EAAKgG,SAClBpF,QAAQZ,EAAKsE,gBAGnB0N,EAAWqB,GACXX,EAAU,CAAChT,QAAQ,aACnB1C,QAEHsW,OAAM,SAAArU,GACPyT,EAAU,CAAChT,QAAQ,yBAIrBgT,EAAU,CAAChT,QAAQ,mBACnBiM,GAAQ,KAGZ,CAACD,EAAO1L,EAAKC,IAAIgS,EAAYlB,EAAMiB,EAAWhV,IAI9C,sBAAO7D,UAAWT,KAAOoG,UAAWhG,MAAO,CAAC4C,gBAAgB,QAAD,OAASnC,EAAMM,WAAf,SAA3D,UAEE,qBAAKV,UAAWT,KAAO6a,YAAvB,SACE,uBACEzQ,SAAUwP,EACVnV,IAAKgV,EACL9V,KAAK,OACLmX,UAAQ,EACRC,OAAO,gDAIX,qBACE3X,MAAM,eACN3C,UAAWT,KAAOgb,QAClB9X,QAAS,SAACqD,GACJyM,GACF1O,OAMN,sBAAK7D,UAAWT,KAAOib,OAAQ7a,MAAO,CAAC4C,gBAAgBnC,EAAMM,WAAWQ,MAAMd,EAAMgB,MAApF,UACE,qBAAKpB,UAAWT,KAAOkb,YAAvB,SACE,8BAAKrB,EAAsB,cAAcxB,EAAMnP,OAAO,IAAxC,aAAd,IAA2D,iCAAS6Q,EAAO/S,eAG5E6S,EAAS,cAACzB,GAAD,CAAcC,MAAOA,EAAOC,YAAaA,IAAe,cAACL,GAAD,CAAU9N,MAAOoP,EAAarB,SAAU+B,IAE1G,sBAAKxZ,UAAWT,KAAOmb,YAAvB,UACE,wBAAQnH,SAAUhB,EAAQvS,UAAU,SAASyC,QAASgX,EAAtD,uBAGA,cAAC5Y,EAAA,EAAD,CAAO8Z,UAAWvB,EAAUnY,aAAc2W,EAAMnP,QAAU,EAAGvH,MAAM,YAAnE,SACA,yBAAQlB,UAAU,SAASyC,QAAS,WAAK4W,GAAY,SAAA9Q,GAAC,OAAGA,MAAzD,kBAAoE6Q,EAAS,OAAO,aAEpF,qBAAKzZ,MAhGM,CAAE6C,QAAS,OAAQmW,eAAgB,YAgG9C,SACE,wBAAQpF,SAAUhB,EAAQvS,UAAU,iBAAiByC,QAASmX,EAA9D,oBAEF,wBAAQ5Z,UAAU,SAASuT,SAAUhB,EAAQ9P,QAASkX,EAAtD,6BEvKK,WAA0B,oCCU1B,SAASiB,GAAT,GAAgC,IAAd/B,EAAa,EAAbA,WAC7B,EAAiC9W,oBAAS,GAA1C,mBAAO8Y,EAAP,KAAkBC,EAAlB,KACMC,EAAUtZ,aAAY,SAAAC,GAAK,OAAIA,EAAMmF,KAAKsE,gBAC1CtH,EAAQyC,IAAMyR,aAAY,WAAK+C,GAAc,KAAQ,IACrD1a,EAAMmB,IACZ,OACI,sBAAK5B,MAAO,CAAC4C,gBAAgBnC,EAAMM,YAAaV,UAAWT,KAAOoG,UAAlE,UACSkV,GAAY,cAACjC,GAAD,CAAUC,WAAYA,EAAYhV,QAASA,IACxD,qBAAK7D,UAAWT,KAAOyb,YAAvB,SACA,cAAC/b,EAAD,CAAQG,KAAK,QAAQD,WAAU,OAAE4b,QAAF,IAAEA,IAAW,SAE5C,sBAAK/a,UAAWT,KAAO0b,cAAvB,UACA,qBAAKjb,UAAWT,KAAO2b,YAAvB,SACI,wBAAQzY,QAAS,WAAKqY,GAAc,IAApC,oCAEJ,sBAAK9a,UAAWT,KAAO4b,cAAvB,UACI,yBAAQ1Y,QAAS,WAAKqY,GAAc,IAApC,UACI,cAAC7b,EAAD,CAAQE,WAAYsI,KACxB,yCAEA,mCACA,cAACxI,EAAD,CAAQE,WAAYwW,KACpB,wCAEA,mCACA,cAAC1W,EAAD,CAAQE,WAAYic,KACpB,sD,yBC/BpB,IAkBeC,GAlBD,CACV,CACIC,KAAK,OACLxc,KAAK,IACLyc,UCHO,WACb,MAA0BxZ,mBAAS,IAAnC,mBAAO8U,EAAP,KAAcC,EAAd,KACM1W,EAAMmB,IAGNsX,EAAad,uBAAY,SAAChC,GAC1Be,GAAS,SAAApV,GAAK,OAAIqU,GAAJ,mBAAYrU,SAC9B,IAEF,OACE,sBAAM1B,UAAWT,KAAOoG,UAAWhG,MAAO,CAAC4C,gBAAgBnC,EAAMM,WAAWQ,MAAMd,EAAMgB,MAAxF,UACE,cAACwZ,GAAD,CAAS/B,WAAYA,IACnB,cAACjC,GAAD,CAAUG,OAAO,EAAOjQ,IAAK,KAAM+P,MAAOA,EAAOC,SAAUA,SDP/D,CACIwE,KAAK,OACLxc,KAAK,aACLyc,UEHO,YAA4B,IAAT/N,EAAQ,EAARA,MACxBgO,EAAS/Z,aAAY,SAAAC,GAAK,OAAEA,EAAMmF,KAAKC,OAC7C,EAAuB/E,mBAAS,IAAhC,mBAAO8U,EAAP,KAAaC,EAAb,KACA,EAAqB/U,mBAAS,MAA9B,mBAAO8E,EAAP,KAAYgH,EAAZ,KACMzN,EAAMmB,IACZ,EAAgC4G,YAASjE,EAAMC,qBAAsB,CACjEiD,UAAW,CAAE7B,GAAGqB,SAAS4G,EAAMiO,OAAO3U,MACtC4U,YAAY,QAFCC,GAAjB,EAAQrR,QAAR,EAAiBqR,OAAOrW,EAAxB,EAAwBA,KAIlBuT,EAAavS,IAAMyR,aAAY,SAAChC,GAClCe,GAAS,SAACpV,GAAD,OAAYqU,GAAZ,mBAAqBrU,SAC9B,IAcJ,OAbE4E,IAAMhD,WAAU,WAGXgC,GAEAuI,EAAQvI,EAAKkC,sBAElB,CAAClC,EAAKqW,EAAMnO,KAMd,OAAG3G,QAAH,IAAGA,OAAH,EAAGA,EAAMF,QAED,sBAAK3G,UAAWT,KAAOqc,YAAajc,MAAO,CAAC4C,gBAAgBnC,EAAMM,WAAWQ,MAAMd,EAAMgB,MAAzF,UACI,cAACgL,GAAD,CAAWC,QAASmP,IAAW3U,EAAKF,OAAQE,KAAMA,IACnDA,EAAKF,SAAS6U,GAEd,sBAAKxb,UAAWT,KAAOsc,eAAvB,cAAwC,cAACjB,GAAD,CAAS/B,WAAYA,OAE7D,qBAAK7Y,UAAWT,KAAOuc,gBAAvB,SACA,cAAClF,GAAD,CAAUC,MAAOA,EAAO/P,IAAKD,EAAKF,OAAQoQ,OAAO,EAAMD,SAAUA,SAKrE,+BFlCP,CACIwE,KAAK,OACLxc,KAAK,QACLyc,UAAU,kBAAI,8CGFPQ,OAbf,WACE,OACE,cAACpQ,GAAD,UAEI,cAAC,KAAD,UAEC0P,GAAOtV,KAAI,gBAAEjH,EAAF,EAAEA,KAAKwc,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,UAAZ,OAAyB,cAAC,KAAD,CAAkB3P,SAAU,SAACoQ,GAAD,OAAU,cAACT,EAAD,eAAeS,KAAYC,OAAK,EAACnd,KAAMA,GAAjEwc,W,2DCAzD,SAASY,GAAc9L,GAErB,OAAO,SAACjL,GACN,MAAwDiL,EAAIvJ,KAApDC,EAAR,EAAQA,IAAKqV,EAAb,EAAaA,aACT1W,EAAU,CACd2W,UAAU,EACVtV,IAAKA,EACLuV,YAJA,EAA2BC,gBAK3BnR,aALA,EAA4C1D,QAM5CoF,SAAUsP,GAEVhX,EAAS,CAAEjC,KAAMqZ,KAAKC,UAAW/W,QAASA,KAI/B,SAASgX,KACtB,MAAoC1a,oBAAS,GAA7C,mBAAO2a,EAAP,KAAmBC,EAAnB,KACA,EAAwB5a,oBAAS,WAC/B,MAAO,CACL6a,SAAU,GACVC,SAAU,GACVP,gBAAiB,GACjBH,aAAc,GACdW,YAAa,GACbC,oBA3BG,IAAIrO,MAAOsO,cAAc9O,UAAU,EAAG,IA4BzC+O,MAAO,GACPC,MAAO,GACPC,OAAQ,OAVZ,mBAAOtW,EAAP,KAAagH,EAAb,KAeM1I,EAAWC,cAEXgY,EAAkB,SAACC,GACvB,OAAO,SAACvX,GACN,IAAI4D,EAAQ5D,EAAE8D,OAAOF,MACT,aAAR2T,GAA8B,aAARA,IACQ,MAA5B3T,EAAMA,EAAMjB,OAAS,IACvB6U,MAAM,0DAER5T,EAAQA,EAAMwG,QAEhBrC,GAAQ,SAACnM,GAAD,mBAAC,eAAgBA,GAAjB,mBAAyB2b,EAAM3T,SAoB3C,OACE,qBAAK1J,UAAWT,KAAOoG,UAAvB,SACE,sBAAK3F,UAAWT,KAAOge,KAAvB,UACGb,EACC,cAAC,GAAD,CACEc,YAtBU,SAAC1X,GACnBA,EAAE0D,iBACF,IAAQoT,EAAuB/V,EAAvB+V,SAAUC,EAAahW,EAAbgW,SAClB7C,KAAIyD,kBAAkB,CAAEb,WAAUC,aAAY1M,MAAK,SAACC,GAC7CA,EAAI7F,KACPpF,EAAS+W,GAAc9L,QAkBnBvJ,KAAMA,EACN6W,aAAcN,IAGhB,cAAC,GAAD,CACEO,eAnBa,SAAC7X,GACtBA,EAAE0D,iBACFwQ,KAAI4D,gBAAgB/W,GAAMsJ,MAAK,SAACC,GACzBA,EAAI7F,KACPpF,EAAS+W,GAAc9L,QAgBnBvJ,KAAMA,EACN6W,aAAcN,IAGlB,4BAAIV,EAAa,sBAAwB,4BACzC,sBAAK1c,UAAWT,KAAOse,QAAvB,UACE,wBACEpb,QAAS,WACPka,GAAc,SAACpU,GAAD,OAAQA,MAF1B,SAKGmU,EAAa,WAAa,UAE7B,sCACA,cAAC,KAAD,CACEoB,MAAM,kBACNC,YAAa,aACbC,SAAS,sBACTC,UAAU,EACVC,OAAO,qBACPzb,QAAS,WACPiO,QAAQC,IAAI,YAEdwN,SAAU,SAAC/N,GACTM,QAAQC,IAAIP,cAS1B,IAAMgO,GAAe,SAAC,GAA4C,IAA1CvX,EAAyC,EAAzCA,KAAM6W,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eAiE1C,OACE,uBAAMpU,SAAUoU,EAAgB3d,UAAWT,KAAO8e,SAAlD,UAjEa,CACb,CACE/C,KAAM,WACNpY,KAAM,OACNH,YAAa,gBACbub,YAAY,EACZjB,IAAK,YAEP,CACE/B,KAAM,WACNpY,KAAM,WACNH,YAAa,kBACbub,YAAY,EACZjB,IAAK,YAEP,CACE/B,KAAM,YACNpY,KAAM,OACNH,YAAa,iBACbub,YAAY,EACZjB,IAAK,gBAGP,CACE/B,KAAM,eACNpY,KAAM,OACNH,YAAa,oBACbub,YAAY,EACZjB,IAAK,mBAGP,CACE/B,KAAM,SACNpY,KAAM,OACNH,YAAa,sBACbub,YAAY,EACZjB,IAAK,UAGP,CACE/B,KAAM,QACNpY,KAAM,QACNH,YAAa,oBACbub,YAAY,EACZjB,IAAK,SAGP,CACE/B,KAAM,QACNpY,KAAM,OACNH,YAAa,oBACbub,YAAY,EACZjB,IAAK,SAGP,CACE/B,KAAM,gBACNpY,KAAM,OACNH,YAAa,GACbub,YAAY,EACZjB,IAAK,gBAMGtX,KAAI,SAACwY,EAAO/c,GAAR,OACV,sBAAkCxB,UAAWT,KAAOif,UAApD,UACE,gCAAQD,EAAMjD,OACd,uBACEpY,KAAMqb,EAAMrb,KACZwG,MAAO7C,EAAK0X,EAAMlB,KAClB1T,SAAU+T,EAAaa,EAAMlB,KAC7Bta,YAAawb,EAAMxb,YACnB8G,SAAU0U,EAAMD,eAPV,eAAiB9c,MAW7B,wBAAQ0B,KAAK,SAAb,gCAIAub,GAAY,SAAC,GAAyC,IAAvC5X,EAAsC,EAAtCA,KAAM6W,EAAgC,EAAhCA,aAAcF,EAAkB,EAAlBA,YAiBvC,OACE,uBAAMjU,SAAUiU,EAAaxd,UAAWT,KAAO8e,SAA/C,UAjBa,CACb,CACE/C,KAAM,WACNpY,KAAM,OACNH,YAAa,gBACbub,YAAY,EACZjB,IAAK,YAEP,CACE/B,KAAM,WACNpY,KAAM,WACNH,YAAa,kBACbub,YAAY,EACZjB,IAAK,aAKGtX,KAAI,SAACwY,EAAO/c,GAAR,OACV,sBAA+BxB,UAAWT,KAAOif,UAAjD,UACE,gCAAQD,EAAMjD,OACd,uBACEpY,KAAMqb,EAAMrb,KACZwG,MAAO7C,EAAK0X,EAAMlB,KAClB1T,SAAU+T,EAAaa,EAAMlB,KAC7Bta,YAAawb,EAAMxb,YACnB8G,SAAU0U,EAAMD,eAPV,YAAc9c,MAY1B,wBAAQ0B,KAAK,SAAb,uB,uBCxOAwb,GAAa,CACftC,UAAS,EACTtV,IAAI,KACJuV,YAAY,KACZlR,aAAa,KACb0B,SAAS,MAkBEhG,GAfJ,WAA8B,IAA7BnF,EAA4B,uDAAtBgd,GAAaC,EAAS,uCACpC,OAAKA,EAAOzb,OAAO0b,KAAKpC,UACb,2BAAI9a,GAASid,EAAOlZ,SAE1BkZ,EAAOzb,OAAO0b,KAAKC,WACb,eAAIH,IAEXC,EAAOzb,OAAO0b,KAAKE,aACZ,2BAAIpd,GAASid,EAAOlZ,SAExB/D,GClBLC,GAAS,CACXvB,MAAM,SAUK2e,GANA,WAA0B,IAAzBrd,EAAwB,uDAAlBC,GAGlB,OAAOD,GCTLgd,GAAe,CACnBM,MAAO,GACP3Y,aAAc,IAyDDE,GAtDC,WAAmC,IAAlC7E,EAAiC,uDAAzBgd,GAAcC,EAAW,uCAChD,GAAoB,eAAhBA,EAAOzb,KACT,OAAO,2BAAKxB,GAAZ,IAAmBsd,MAAM,GAAD,mBAAMtd,EAAMsd,OAAZ,CAAmBL,EAAOlZ,YAC7C,GAAoB,mBAAhBkZ,EAAOzb,KAEhB,OADAwN,QAAQC,IAAI,SACL,2BAAKjP,GAAZ,IAAmBsd,MAAO,YAAItd,EAAMsd,OAAOnZ,QAAO,SAACC,EAAGE,GAAJ,OAAgB,IAANA,OACvD,GAAoB,oBAAhB2Y,EAAOzb,KAA4B,CAC5C,IAAM+Q,EAAG,YAAOvS,EAAM2E,cAChB4Y,EAAQ,CACZN,EAAOlZ,SADK,mBAETwO,EAAIpO,QAAO,SAACC,GAAD,OAAOA,EAAEN,iBAAmBmZ,EAAOlZ,QAAQD,oBAG3D,OAAO,2BAAK9D,GAAZ,IAAmB2E,aAAc4Y,IAC5B,GAAoB,uBAAhBN,EAAOzb,KAChB,OAAO,2BAAKxB,GAAZ,IAAmB2E,aAAcsY,EAAOlZ,UACpC,GAAkB,qBAAdkZ,EAAOzb,KAA0B,CACvC,IAAMqC,EAAGoZ,EAAOlZ,QACVwO,EAAI,YAAIvS,EAAM2E,cACd4Y,EAAShL,EAAIlO,KAAI,SAAAD,GACnB,OAAGP,IAAKO,EAAEN,eACC,2BAAIM,GAAX,IAAapE,MAAM,SAEhBoE,KAGX,OAAO,2BAAIpE,GAAX,IAAiB2E,aAAa4Y,IAC5B,GAAkB,qBAAdN,EAAOzb,KAA0B,CAEzC,IAAMqC,EAAGoZ,EAAOlZ,QACVwO,EAAI,YAAIvS,EAAM2E,cACd4Y,EAAShL,EAAIlO,KAAI,SAAAD,GACnB,OAAGP,IAAKO,EAAEN,eACC,2BAAIM,GAAX,IAAapE,MAAM,SAEhBoE,KAGX,OAAO,2BAAIpE,GAAX,IAAiB2E,aAAa4Y,IAC1B,GAAkB,sBAAdN,EAAOzb,KAA2B,CAE1C,IAAMqC,EAAGoZ,EAAOlZ,QACRwO,EAAI,YAAIvS,EAAM2E,cACd4Y,EAAShL,EAAIlO,KAAI,SAAAD,GACnB,OAAGP,IAAKO,EAAEN,eACC,2BAAIM,GAAX,IAAapE,MAAM,UAEhBoE,KAGX,OAAO,2BAAIpE,GAAX,IAAiB2E,aAAa4Y,IAElC,OAAOvd,GCnDMwd,8BAAgB,CAACrY,KAAKsY,GAAYxd,SAASyd,GAAgB/U,QAAQ9D,KCF5E8Y,GAAW,C,OAACC,GAUHC,GATDC,uBACZC,GACAC,+BACEC,mBAAe,WAAf,EAAmBN,M,4ECLjBO,GAA8B,iBAC9BC,GAAW,IAAIC,KAAS,CAC5BC,IAAI,UAAD,OAAYH,GAAZ,cAGCI,GAAS,IAAIC,KAAc,CAC/BF,IAAI,QAAD,OAAUH,GAAV,YACHM,QAAS,CACPC,WAAW,KASTC,GAAYC,kBAChB,YAAgB,IAAb9O,EAAY,EAAZA,MACK+O,EAAaC,aAAkBhP,GACrC,MACsB,wBAApB+O,EAAWE,MACc,iBAAzBF,EAAWG,YAGfT,GACAH,ICZIa,GAAS,IAAIC,KAAa,CAC9BC,KAAMR,GACNS,MAAO,IAAIC,OAGPC,GAAS,WAEb,IAAMC,ECrBD,WACH,MAA+Bjf,mBAAS,MAAxC,mBAAOif,EAAP,KAAkBC,EAAlB,KACMC,EAAczf,aAAY,SAAAC,GAAK,OAAEA,EAAMmF,KAAKuV,YAMlD,OALA9Y,qBAAU,WACF2d,EAAYC,KACjB,CAACA,IAGGF,EDaUG,GACnB,OAAmB,OAAfH,GACiB,IAAfA,EACK,cAAC,GAAD,IAGL,cAACvE,GAAD,IAIC,8BAGT2E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU/B,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAACgC,GAAA,EAAD,CAAgBb,OAAQA,GAAxB,SACA,cAAC,GAAD,YAMNzK,SAASuL,eAAe,U,gCE1CX3iB,IAJL,CACN4iB,IAAI,OACJziB,IAAI,M,mBCHRN,EAAOC,QAAU,CAAC,UAAY,8BAA8B,gBAAkB,oCAAoC,WAAa,+BAA+B,WAAa,+BAA+B,SAAW,6BAA6B,OAAS,2BAA2B,KAAO,yBAAyB,KAAO,yBAAyB,YAAc,gCAAgC,WAAa,+BAA+B,KAAO,yBAAyB,MAAQ,0BAA0B,YAAc,gCAAgC,aAAe,mC,mBCA/iBD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,UAAY,2BAA2B,YAAc,6BAA6B,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,cAAgB,+BAA+B,YAAc,+B,mBCAzTD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,QAAU,0BAA0B,OAAS,yBAAyB,cAAgB,gCAAgC,kBAAoB,oCAAoC,YAAc,8BAA8B,YAAc,gC,qFCC5Rqb,EAAM,CACJ4D,gBADI,SACY/W,GAAO,OAAD,mIAED2K,MAAM,GAAD,OACvB3S,IAAI4iB,IADmB,gBAE1BC,EAAW,OAAQ,CAAE7a,KAAMA,KAC3BsJ,MAAK,SAACC,GAAD,OAASA,EAAI0B,UALI,YAElB6P,EAFkB,QAOXrI,OAPW,yCAQfqI,GARe,aAUlB,IAAIC,MAVc,yDAYjB,CAAErX,IAAK,gBAZU,4DAetBkT,kBAhBI,SAgBc5W,GAAO,OAAD,mIAEH2K,MAAM,GAAD,OACvB3S,IAAI4iB,IADmB,eAE1BC,EAAW,OAAQ,CAAE7a,KAAMA,KAC3BsJ,MAAK,SAACC,GAAD,OAASA,EAAI0B,UALM,YAEpB6P,EAFoB,QAObrI,OAPa,yCAQjBqI,GARiB,aAUpB,IAAIC,MAVgB,yDAYnB,CAAErX,IAAK,4BAZY,4DAexBsX,cA/BI,SA+BUhb,GAAO,OAAD,mIAEC2K,MAAM,GAAD,OACvB3S,IAAI4iB,IADmB,iBAE1BC,EAAW,OAAQ,CAAE7a,KAAMA,KAC3BsJ,MAAK,SAACC,GAAD,OAASA,EAAI0B,UALE,YAEhB6P,EAFgB,QAOTrI,OAPS,yCAQbqI,GARa,aAUhB,IAAIC,MAVY,yDAYf,CAAErX,IAAK,gBAZQ,4DAepB0P,SA9CI,SA8CK3Q,GAAO,OAAD,0HACAwY,IAAM,CACvBrQ,OAAQ,OACR5S,IAAI,GAAD,OAAKA,IAAI4iB,IAAT,iBACHnc,KAAMgE,EACNoI,QAAS,CAAE,eAAgB,yBAE1BvB,MAAK,SAAU0B,GAEd,OAAOA,EAASvM,QAEjB6U,OAAM,SAAUtI,GAEfnB,QAAQC,IAAIkB,MAbG,cACbvM,EADa,yBAeZA,GAfY,8CAiBf8R,cA/DI,WA+Da,OAAD,mIAEE0K,IACjBC,IADiB,UACVljB,IAAI4iB,IADM,iBAEjBtR,MAAK,qBAAG7K,QAJO,cAEZuR,EAFY,yBAKXA,GALW,yDAOX,CAAEtM,IAAK,0BAPI,4DAUhByX,YAzEI,SAyEQzc,GAAK,OAAD,sIAEXiM,MAAM,GAAD,OAAI3S,IAAI4iB,IAAR,6BAAgClc,IAAM4K,MAAK,SAACC,GAAD,OACrDA,EAAI0B,WAHY,yDAMX,CAAEvH,IAAK,KAAEhE,UANE,2DAShB0b,uBAlFI,SAkFmBC,GAAS,OAAD,mIAEV1Q,MAAM,GAAD,OAAI3S,IAAI4iB,IAAR,yBAA4BS,IAAU/R,MAChE,SAACC,GAAD,OAASA,EAAI0B,UAHkB,cAE3BD,EAF2B,yBAK1BA,GAL0B,yDAO1B,CAAEtH,IAAK,KAAEhE,UAPiB,4DAU/B4b,eA5FI,SA4FWrb,GAAM,OAAD,mIAEC0K,MAAM,GAAD,OAAI3S,IAAI4iB,IAAR,yBAA4B3a,IAAOqJ,MAC7D,SAACC,GAAD,OAASA,EAAI0B,UAHO,cAEhBD,EAFgB,yBAKfA,GALe,yDAOf,CAAEtH,IAAK,KAAEhE,UAPM,4DAUpB6b,uBAtGI,SAsGmBtb,EAAKob,GAAS,OAAD,mIAEf1Q,MAAM,GAAD,OACvB3S,IAAI4iB,IADmB,yBACC3a,EADD,YACQob,IAClC/R,MAAK,SAACC,GAAD,OAASA,EAAI0B,UAJkB,cAEhCD,EAFgC,yBAK/BA,GAL+B,yDAO/B,CAAEtH,IAAK,KAAEhE,UAPsB,4DAUpC8b,cAhHI,SAgHUvb,EAAKwC,GAAO,OAAD,mIAERwY,IAAM,CACvBrQ,OAAQ,MACR5S,IAAI,GAAD,OAAKA,IAAI4iB,IAAT,wBAA4B3a,GAC/BxB,KAAMgE,EACNoI,QAAS,CAAE,eAAgB,yBAE1BvB,MAAK,SAAU0B,GAEd,OAAOA,EAASvM,QAEjB6U,OAAM,SAAUtI,GAEfnB,QAAQC,IAAIkB,MAdW,cAErBvM,EAFqB,yBAgBpBA,GAhBoB,yDAkBpB,CAAEiF,IAAK,KAAEhE,UAlBW,4DAqBzB+b,gBArII,SAqIYrU,GAAS,OAAD,mIAEHuD,MAAM,GAAD,OAAI3S,IAAI4iB,IAAR,iBAA2BC,EAAW,OAAOzT,IAAUkC,MAAK,SAAAC,GAAG,OAAEA,EAAI0B,UAFvE,cAElBD,EAFkB,yBAGjBA,GAHiB,yDAMjB,CAACtH,IAAI,gBANY,4DASxBgY,qBA9II,SA8IiB1S,GAAQ,OAAD,mIAED2B,MAAM,GAAD,OAAI3S,IAAI4iB,IAAR,yBAA4B5R,IAAUM,MAAK,SAAAC,GAAG,OAAEA,EAAI0B,UAFxD,cAEhBD,EAFgB,yBAGfA,GAHe,yDAKnB,CACLtH,IAAI,gBANoB,4DAU5BiY,sBAxJI,SAwJkBha,GAAQ,OAAD,mIAEJgJ,MAAM,GAAD,OAAI3S,IAAI4iB,IAAR,wBAAkCC,EAAW,OAAOlZ,IAAS2H,MAAK,SAAAC,GAAG,OAAEA,EAAI0B,UAF5E,cAEnBD,EAFmB,yBAGlBA,GAHkB,yDAMtB,CAACtH,IAAI,cANiB,6DAW/BmX,EAAa,SAACjQ,EAAQnM,GAC1B,MAAO,CACLmM,OAAQA,EAERgR,KAAM,OAEN/Q,QAAS,CACP,eAAgB,oBAGlBxI,KAAMyI,KAAKC,UAAUtM,KAIV0U,O,mBClLftb,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,wBAAwB,SAAW,4BAA4B,QAAU,2BAA2B,UAAY,+B,mBCAlLD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,YAAc,kCAAkC,SAAW,+BAA+B,QAAU,8BAA8B,QAAU,8BAA8B,YAAc,kCAAkC,YAAc,oC,mBCAtSD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,YAAc,iCAAiC,WAAa,kC,gCCIjNggB,IALD,CACVnC,UAAU,iBACVqC,WAAW,kBACXC,aAAa,uB,mBCFjBpgB,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,OAAS,uBAAuB,MAAQ,sBAAsB,OAAS,yB,mBCAvHD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,UAAY,wBAAwB,UAAY,wBAAwB,YAAc,0BAA0B,UAAY,wBAAwB,aAAe,6B,mBCAzND,EAAOC,QAAU,CAAC,UAAY,2BAA2B,OAAS,wBAAwB,KAAO,sBAAsB,eAAiB,gCAAgC,YAAc,+B,mBCAtLD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,cAAgB,+BAA+B,YAAc,6BAA6B,YAAc,6BAA6B,cAAgB,iC,mBCA9MD,EAAOC,QAAU,CAAC,kBAAoB,kCAAkC,OAAS,uBAAuB,QAAU,wBAAwB,YAAc,8B,mBCAxJD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,WAAa,6BAA6B,OAAS,yBAAyB,UAAY,4BAA4B,MAAQ,0B,mBCAtLD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,cAAgB,iCAAiC,YAAc,iC,mBCA1HD,EAAOC,QAAU,CAAC,YAAc,8BAA8B,OAAS,yBAAyB,eAAiB,iCAAiC,gBAAkB,qC","file":"static/js/main.a9f8c1ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomePage_container__2EfJt\",\"showup\":\"HomePage_showup__3gL5c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__6kQGY\"};","export default __webpack_public_path__ + \"static/media/avatar.6537f30a.jpg\";","import api from 'src/lib/API/URL'\nexport function getImageURL(url){\n            const {path}=url\n        \n        \n       return api.img+path\n        \n}\nexport function getAvatarImage(url){\n    \n    if(url?.indexOf('public/')>=0){\n     return api.img+url\n    }\n    return url\n}","import React from 'react'\nimport styles from './Avatar.module.scss'\nimport noAvatar from './avatar.jpg'\nimport { getAvatarImage } from 'src/lib/Ultilities/getURL'\nexport default function Avatar({userAvatar,size=\"small\",from,round=true}) {\n    let imgSize\n    switch (size) {\n        case \"small\":imgSize=styles.small\n            \n            break;\n            case \"medium\":imgSize=styles.medium\n            \n            break;\n            case \"large\":imgSize=styles.large\n            \n            break;\n        default:\n            imgSize=styles.small\n            break;\n    }\n    return (\n        <div style={{borderRadius:round?\"\":\"0\",backgroundImage:`url(\"${getAvatarImage(userAvatar)??noAvatar}\")`}} className={`${styles.avatar} ${imgSize}`} >\n            \n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/message.282a010f.svg\";","export default __webpack_public_path__ + \"static/media/logo.2163973a.svg\";","import React from 'react'\nimport Avatar from 'src/Components/Avatar'\nimport { Badge ,withStyles} from '@material-ui/core'\n\n\nconst StyledBadge = withStyles((theme) => ({\n    badge: {\n      right: 4,\n      top: 4,\n      border: `2px solid ${theme.palette.background.paper}`,\n      padding: '0 4px',\n    },\n  }))(Badge);\nexport default function IconBadge({icon,size,count}) {\n    return (<StyledBadge badgeContent={count??4} color=\"secondary\">\n  <Avatar userAvatar={icon} size={size}/>\n</StyledBadge>\n        \n    )\n}\n","export default __webpack_public_path__ + \"static/media/notification.a103debe.svg\";","\nimport bgRosie from './images/rose.jpg'\nimport bgJennie from './images/jennie.jpg'\n  \n   const  theme={\n        rosie:{\n            text:'var(--text-rosie)',\n            background:'var(--background-rosie)',\n            backgroundPost:'var(--background-post-rosie)',\n            backgroundImage:bgRosie\n        },\n        jennie:{\n            text:'var(--text-jennie)',\n            background:'var(--background-jennie)',\n            backgroundPost:'var(--background-post-jennie)',\n            backgroundImage:bgJennie\n        }\n    }\nexport default theme","export default __webpack_public_path__ + \"static/media/rose.57fba1c8.jpg\";","export default __webpack_public_path__ + \"static/media/jennie.faf3ee6f.jpg\";","import {useState,useEffect} from 'react'\nimport { useSelector } from 'react-redux'\nimport theme from 'src/stylesheets/color'\n\nexport function useTheme(){\n    const index=useSelector(state=>state.settings.theme)\n    \n\n    return theme[index]\n\n\n}","export default __webpack_public_path__ + \"static/media/close.7bf27813.svg\";","export default __webpack_public_path__ + \"static/media/search.d1139fd8.svg\";","import React,{useState,useRef,useEffect} from 'react'\nimport styles from './SearchBox.module.scss'\n// icon\nimport close from 'src/stylesheets/svg/close.svg'\n\nimport search from 'src/stylesheets/svg/search.svg'\n// material ui\nimport {Drawer} from '@material-ui/core'\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from 'src/lib/hooks/useColor'\n\nconst SearchBox=()=>{\n    const isMobile=useMediaQuery(\"(max-width:700px)\")\n    const [isShown,setState]=useState(true)\n    const [searchDrawer,setSearchDrawer]=useState(false)\n    const theme=useTheme()\n    return (<>\n    <OverlaySearch isOpen={searchDrawer} setOpen={setSearchDrawer}/>\n    <form className={styles.searchBox} style={{backgroundColor:isMobile?\"transparent\":''}}>\n        \n        <div style={{display:isShown?'':'none'}}><img \n        onClick={()=>{\n            if(isMobile){\n                setSearchDrawer(true)\n            }\n        }}\n        \n        alt=\"icon\" title=\"Search\" width={isMobile?\"32\":'23'} src={search}/></div>\n    <input style={{color:theme.text,display:isMobile?'none':''}} placeholder=\"Search Anything!\" onFocus={()=>{setState(false)}}  onBlur={()=>{setState(true)}} type=\"text\"/>\n    </form>\n    </>)\n}\nconst OverlaySearch=({isOpen,setOpen})=>{\n    const inputRef=useRef(null)\n    useEffect(()=>{\n       if(inputRef?.current){\n        inputRef.current.focus()\n       }\n    },[inputRef])\n    return <React.Fragment>\n    \n    <Drawer anchor={\"top\"} open={isOpen} onClose={()=>{setOpen(false)}}>\n        <p className={styles.searchTitle}>Search anything!</p>\n        <div className={styles.overlaySearch}>\n        <div><img alt=\"icon\" title=\"Search\" src={search}/></div>\n            <input ref={inputRef} type=\"text\"/>\n            <div><img onClick={()=>{setOpen(false)}} alt=\"icon\" title=\"Search\" src={close}/></div>\n        </div>\n    </Drawer>\n  </React.Fragment>\n    \n}\n\nexport {\n    SearchBox\n}","import { gql } from \"@apollo/client\";\n\nconst Query = {\n  GET_USER_INFORMATION: gql`\n    query getUserInformation($id: Int!) {\n      getUserInformation(userid: $id) {\n        userid\n        userfullname\n        userdisplayname\n        picture\n      }\n    }\n  `,\n  GET_LATEST_POST:gql`\n    query{\n\tgetLatestPost{\n    postid\n    userid\n    content\n      datecreated\n      media\n      likecount\n      commentcount\n      embeded\n      \n    user {\n      picture\n      userid\n      userfullname\n      \n    }}\n  \n}\n  `,\n  GET_USER_LATEST_POST:gql`\n   query  getLatestPostByUserID($userid:Int!){\n  getLatestPostByUserID(userid:$userid){\n    postid\n    userid\n    content\n      datecreated\n      media\n      likecount\n      commentcount\n      embeded\n    \n  user {\n    picture\n    userid\n    userfullname\n  }}\n  \n  }\n  `,\n  GET_POST_LATEST_COMMENT:gql`\n  query getPostCommentById($postid:Int!){\n  getPostCommentById(postid:$postid){\n    commentid\n  postid\n  userid\n  content\n  datecreated\n  user {\n    picture\n    userfullname\n    userid\n  }}\n  }\n  `,\n  POST_COMMENT:gql`\n  mutation createComment($userid:Int!,$content:String!,$postid:Int!){\n    createComment(input:{userid:$userid,content:$content,postid:$postid}){\n      content\n      commentid\n      datecreated\n      userid\n      postid\n      user{\n        picture\n        userfullname\n        userid\n      }\n      }\n  }`,\nUPDATE_COMMENT:gql`\n subscription getComment($postid:Int!){\ngetComment(postid:$postid){\n  commentid\n  userid\n  content\n  datecreated\n  \n  user{\n    userid\n    userfullname\n    userdisplayname\n    picture\n  }\n}\n}`,\nLISTEN_MESSAGE:gql`\nsubscription waitAllMessage($userid:Int!){\n   \n  \nwaitAllMessage(userid:$userid){\n  messageid\n  content\n  userid\n  receiver\n  datecreated\n  conversationid\n}\n}`,\nGET_ALL_CONVERSATION:gql`\n   query getAllConversation($userid:Int!) {\ngetAllConversation(userid:$userid){\nconversationid\nuserid1\nuserid2\nlastactivedate\nlastmessage{\n  content\n  receiver\n}}\n}\n`,\nSEND_MESSAGE:gql`\nmutation sendMessage($userid:Int!,$conversationid:Int!,$receiver:Int!,$content:String!){\n  sendMessage(input:{userid:$userid,conversationid:$conversationid,receiver:$receiver,content:$content}){\n    content\n    messageid\n    datecreated\n    userid\n    conversationid\n    receiver\n  }\n}\n`,\nINIT_MESSAGE:gql`\n  mutation initConversation($userid1:Int!,$userid2:Int!){\n      initConversation(input:{userid1:$userid1,userid2:$userid2}){\n              conversationid\n              userid1\n              userid2\n  \n}\n\n}`,\nGET_CONVERSATION_MESSAGE:gql`\nquery getAllMessage($id:Int!){\ngetAllMessage(conversationid:$id){\nmessageid\nuserid\nconversationid\ncontent\nreceiver\n  \n}\n}\n\n`\n\n};\nexport default Query","import React from 'react'\nimport styles from './ChatBubble.module.scss'\nimport Avatar from '../Avatar'\nimport { useLazyQuery, useMutation,useQuery } from '@apollo/client'\nimport Query from 'src/lib/API/Apollo/Queries'\nimport { useSelector ,useDispatch} from 'react-redux'\nimport { useTheme } from 'src/lib/hooks/useColor'\nimport { Badge,withStyles } from '@material-ui/core'\nconst StyledBadge = withStyles((theme) => ({\n    badge: {\n        right: 0,\n        \n        top: 40,\n      transform:\"unset\",\n    },\n  }))(Badge);\nexport default function ChatBubble({conversation,newMessage}) {\n    const  dispatch = useDispatch()\n    const onOpen=(data)=>{\n        const id=data.conversationid\n        dispatch({type:\"openConversation\",payload:id})\n       \n    }\n    const onHide=(id)=>{\n            dispatch({type:\"hideConversation\",payload:id})\n    }\n    const onClose=(id)=>{\n        dispatch({type:\"closeConversation\",payload:id})\n    }\n    return (\n        <div className={styles.container}>\n\n<div className={styles.chatGroups}>\n                        {conversation.filter(e=>e.state!=='close').map((e,i)=><ChatDialog newMessage={newMessage} onClose={onClose} onHide={onHide} key={\"chat-\"+i} thisEl={e}/>)}\n\n                </div>\n                <div className={styles.bubbleContainer}>\n                {conversation.map((c,i)=> <Conversation newMessage={newMessage} handleOpen={onOpen} data={c} key={\"cvst-\"+c.conversationid}  />)}\n\n                </div>\n                \n        </div>\n    )\n}\n\nconst Conversation=({data,handleOpen,newMessage})=>{\n    const [message,setMessage]=React.useState(null)\n    const getUserLazy=useLazyQuery(Query.GET_USER_INFORMATION)\n    const userid=useSelector(state=>parseInt(state.user.uid))\n    const [messageCount,setCount]=React.useState(0)\n    React.useEffect(()=>{\n        const {userid1,userid2}=data\n\n            const otherid=userid===userid1?userid2:userid1\n           getUserLazy[0]({variables:{id:otherid}})\n    },[data,userid])\n\n\n    React.useEffect(()=>{\n        const isThisConver=newMessage?.waitAllMessage.conversationid===data?.conversationid\n     if(isThisConver && newMessage.waitAllMessage.messageid!==message?.messageid){\n         \n        setMessage(newMessage.waitAllMessage)\n        if(data.state!=='open'){\n            setCount(c=>c+1)\n        }else{\n            setCount(0)\n        }\n        \n     }\n    },[newMessage,data,message])\n    React.useEffect(()=>{\n        if(data.state==='open'){\n            setCount(0)\n        }\n    },[data.state])\n    return <div className={styles.bubbleItem} onClick={()=>{handleOpen(data);}}>\n<StyledBadge badgeContent={messageCount<9?messageCount:\"9+\"} color=\"secondary\">\n<Avatar userAvatar={getUserLazy[1]?.data?.getUserInformation.picture}  size=\"medium\"/>\n\n    </StyledBadge>        \n    </div>\n}\n\nconst ChatDialog=({onHide,thisEl,onClose,newMessage})=>{\n    const [message,setMessage]=React.useState([])\n    const userid=useSelector(state=>parseInt(state.user.uid))\n    const [sendMessage, { data }] = useMutation(Query.SEND_MESSAGE);\n    const getUserLazy=useLazyQuery(Query.GET_USER_INFORMATION)\n    const [userState,setUserState]=React.useState({})\n    const [inputVal,setVal]=React.useState('')\n    const theme=useTheme()\n    const bodyRef=React.useRef(null)\n       const getAllComment = useQuery(Query.GET_CONVERSATION_MESSAGE,{variables:{id:thisEl.conversationid},fetchPolicy:\"no-cache\"});\n// load on mount\n    React.useEffect(()=>{\n            const {data}=getAllComment\n            \n            if(data?.getAllMessage){\n                    const newArr=[...data.getAllMessage]\n                setMessage(s=>([...newArr]))\n            }\n    },[getAllComment])\n    // update after send message\n    React.useEffect(()=>{\n        if(data?.sendMessage){\n            const update=data.sendMessage\n\n            setMessage(s=>{\n                    if(s.length>0){\n                        if(update.messageid!==s[s.length-1].messageid){\n                            return [...s,update]\n                        }\n                        return s\n                    }\n                    return [update]\n            })\n        }\n    },[data])\n    React.useEffect(()=>{\n        const isThisConver=newMessage?.waitAllMessage.conversationid===thisEl.conversationid\n     if(isThisConver){\n         if(message.length>0){\n             if(newMessage?.waitAllMessage.messageid!==message[message.length-1]?.messageid)\n             {\n\n                 setMessage(c=>([...c,newMessage.waitAllMessage]))\n             }\n         }else{\n             setMessage([newMessage?.waitAllMessage??[...[]]])\n         }\n       \n        \n     }\n    },[newMessage,thisEl])\n    React.useEffect(()=>{\n        const {userid1,userid2}=thisEl\n\n            const otherid=userid===userid1?userid2:userid1\n           getUserLazy[0]({variables:{id:otherid}})\n    },[thisEl,userid])\n\n    React.useEffect(()=>{\n        if(getUserLazy[1]?.data){\n            setUserState(getUserLazy[1]?.data.getUserInformation)\n        }\n    },[getUserLazy])\n   \n React.useEffect(()=>{\n    const scrollToBottom=(objDiv)=>{\n        objDiv.scrollTop = objDiv.scrollHeight;\n    }\n    scrollToBottom(bodyRef.current)\n },[message])\n\n    const onSubmit=(e)=>{\n        e.preventDefault()\n       if(inputVal.length>0){\n        const receiver=thisEl.userid1===userid?thisEl.userid2:thisEl.userid1\n        \n       if(receiver&&userid){\n        sendMessage({variables:{userid:userid,receiver:receiver,conversationid:thisEl.conversationid,content:inputVal}})\n        setVal('')\n       }\n       }\n    }\n\n    return <div className={`${styles.chatItem} ${thisEl.state===\"open\"?styles.chatOpen:styles.chatHidden}`}>\n            <div className={styles.header} style={{backgroundColor:theme.backgroundPost}}>\n                <p>{userState?.userfullname||\"loading\"}</p>\n                <button  className=\"button\" onClick={()=>{onHide(thisEl.conversationid)}}>hide</button>\n                <button className=\"button\" onClick={()=>{onClose(thisEl.conversationid)}}>close</button>\n            </div>\n            <div className={styles.body} ref={bodyRef}>\n                <div className={styles.bodyContent} ref={bodyRef}>\n                {message.map(e=><div className={styles.commentItem} key={\"chat-\"+e.messageid+' '+thisEl.conversationid}><MessageItem avatar={userState?.picture||null} text={e.content} color={userid===e.userid}/></div>)}\n                </div>\n                        {/* <div  className={styles.scrollToBottom}></div> */}\n            </div>\n            <div className={styles.form}>\n                <form onSubmit={onSubmit}>\n                    <input value={inputVal} onChange={(e)=>{setVal(e.target.value)}} type=\"text\" required placeholder=\"enter your message\"/>\n                    <button  className=\"button\" type=\"submit\">send</button>\n                </form>\n            </div>\n    </div>\n}\n\nconst MessageItem=({text,color,avatar})=>{\n    const ref=React.useRef()\n    React.useEffect(()=>{\n          if(ref?.curent){\n                ref.current.scrollIntoView()\n          }  \n    },[])\nreturn <div ref={ref} className={`${color?styles.right:styles.left} ${styles.messageGroup}`}>\n    {!color?<Avatar userAvatar={avatar} size=\"small\"/>:<></>}\n   <div>\n   <p>{text}</p>\n   </div>\n    \n    \n    </div>\n}","import React from \"react\";\nimport { useSubscription } from \"@apollo/client\";\nimport Query from \"src/lib/API/Apollo/Queries\";\nimport IconBadge from \"../IconBadge\";\nimport style from \"./style.module.scss\";\nimport { useQuery } from \"@apollo/client\";\nimport ChatBubble from \"../ChatBubble\";\nimport { useSelector, useDispatch } from \"react-redux\";\nexport default function ChatListener({ userid, icon }) {\n  const dispatch = useDispatch();\n\n  const GlobalConversation = useSelector((state) => state.Message.Conversation);\n  const { loading, err, data } = useQuery(Query.GET_ALL_CONVERSATION, {\n    variables: { userid },\n  });\n\n  // React.useEffect(() => {\n  //   if (data?.getAllConversation) {\n  //     dispatch({\n  //       type: \"getAllConversation\",\n  //       payload: data.getAllConversation.map((e) => ({ ...e, state: \"close\" })),\n  //     });\n  //   }\n  // }, [data]);\n\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <IconBadge icon={icon} />\n      {/* <div className={style.container}>\n            {conversation.map(e=><li key={\"dropdown-\"+e.conversationid}>{e.conversationid}</li>)}\n            </div> */}\n      {GlobalConversation && (\n        <Listener\n          conversation={GlobalConversation}\n          userid={userid}\n          \n        />\n      )}\n    </div>\n  );\n}\n\nconst Listener = ({ userid, conversation }) => {\n  const listener = useSubscription(Query.LISTEN_MESSAGE, {\n    variables: { userid },\n  });\n  const FirstGlobal=useSelector((s)=>s.Message.Conversation[0]||null)\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    if (listener?.data) {\n      // onMessage(listener.data.waitAllMessage)\n      const newMessage = listener.data.waitAllMessage;\n      const { userid, receiver } = newMessage;\n\n      const newC = {\n        conversationid: newMessage.conversationid,\n\n        lastmessage: newMessage.content,\n        userid1: Math.min(userid, receiver),\n        userid2: Math.max(userid, receiver),\n        state: \"close\",\n      };\n      if( FirstGlobal===null|| FirstGlobal?.conversationid!==newC.conversationid){\n\n        dispatch({ type: \"addConversation\", payload: newC });\n      }\n    }\n  }, [listener]);\n  return (\n    <>\n      <ChatBubble conversation={conversation} newMessage={listener.data} />\n    </>\n  );\n};\n","import React from \"react\";\nimport Avatar from \"src/Components/Avatar\";\nimport styles from \"./Navbar.module.scss\";\nimport { Link } from \"react-router-dom\";\n// icon\nimport message from \"src/stylesheets/svg/message.svg\";\nimport logo from \"src/stylesheets/svg/logo.svg\";\nimport IconBadge from \"src/Components/IconBadge\";\nimport notification from \"src/stylesheets/svg/notification.svg\";\n// material ui\nimport { useTheme } from \"src/lib/hooks/useColor\";\nimport { SearchBox } from \"../SearchBox\";\nimport { useSelector } from \"react-redux\";\nimport ChatListener from \"../ChatListener\";\nexport default function Navbar({userid}) {\n  const uid = useSelector((state) => state.user.uid);\n  const theme=useTheme()\n  const profileImage=useSelector(state=>state.user.profileImage)\n  return (\n    <header style={{backgroundColor:theme.background,color:theme.text}} className={styles.navbar}>\n      <div className={styles.content}>\n        <div className={styles.groupSearch} style={{display:'flex',alignItems:\"center\"}}>\n          <Link to=\"/\">\n            <Avatar userAvatar={logo} />\n          </Link>\n          <SearchBox />\n        </div>\n\n        <div className={styles.groupNotification}  style={{display:'flex',alignItems:\"center\"}}>\n          {userid&&<ChatListener icon={message} userid={userid}/>}\n          <IconBadge icon={notification} />\n          {uid && (\n            <Link to={`/user/${uid}`}>\n              <Avatar userAvatar={profileImage}/>\n            </Link>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n}\n","\nimport React from 'react'\nimport Navbar from 'src/Components/Navbar'\nimport { useTheme } from 'src/lib/hooks/useColor'\n\nimport { useSelector } from 'react-redux'\nexport default function Layout({children}) {\n    const userid=useSelector(state=>state.user.uid)\n    const theme=useTheme()\n    const style={\n        backgroundColor:theme.background,\n        paddingBottom:'10vh',\n        backgroundImage:`url(\"${theme.backgroundImage}\")`,\n        backgroundPosition:\"left top\",\n        backgroundSize:\"cover\",\n        backgroundAttachment:\"fixed\",\n        minHeight:\"100vh\"\n    }\n    return (\n        <div style={style}>\n\n            <Navbar userid={userid}/>\n            {children}\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/setting.343a5657.svg\";","import React,{Suspense} from 'react'\nimport styles from './UserWall.module.scss'\nimport Avatar from '../Avatar'\nimport setting from 'src/stylesheets/svg/setting.svg'\nimport { useSelector } from 'react-redux'\nimport { useTheme } from 'src/lib/hooks/useColor'\nimport { useDispatch } from 'react-redux'\nimport { useMutation } from '@apollo/client'\nimport Query from 'src/lib/API/Apollo/Queries'\n\nconst Setting=React.lazy(()=>import('src/Components/SettingPanel'))\nexport default function UserWall({user,isLocal}) {\n    const dispatch = useDispatch()\n    const theme=useTheme()\n    const [openMenu,setOpenMenu]=React.useState(false)\n    const localUser=useSelector(state=>state.user)\n    const [initConversation,{data}]=useMutation(Query.INIT_MESSAGE)\n\n    const onInitConversation=()=>{\n        const userid=parseInt(localUser.uid)\n        const receiver=parseInt(user.userid)\n        if(userid!==receiver){\n            const first=Math.min(userid,receiver)\n            const second=Math.max(userid,receiver)\n            initConversation({variables:{userid1:first,userid2:second}})\n        }\n        \n\n    }\n    React.useEffect(()=>{\n        if(data?.initConversation){\n            dispatch({type:\"addConversation\",payload:{...data.initConversation,state:'close'}})\n        }\n    },[data])\n    return (\n        <div className={styles.container}> \n        <Suspense fallback={<FallBack/>}>\n\n        <Setting open={openMenu} onClose={()=>{setOpenMenu(false)}}/>\n        </Suspense>\n        <div className={styles.userInfor} style={{backgroundColor:`rgba(${theme.background},.5)`}}>\n       <div className={styles.group}>\n       <Avatar size=\"large\" userAvatar={isLocal?localUser?.profileImage:user?.picture}/>\n        <p>{isLocal?localUser?.fullName:user?.userfullname}</p>\n        <button onClick={onInitConversation}>message</button>\n       </div>\n        </div>\n           <div className={styles.background} >\n               <button onClick={()=>{setOpenMenu(true)}}><img width={35} src={setting}/></button>\n           </div>\n        </div>\n    )\n}\n\nconst FallBack=()=>{\n    return <></>\n}","export default __webpack_public_path__ + \"static/media/reaction.61917291.svg\";","export default __webpack_public_path__ + \"static/media/userreaction.ab536510.svg\";","import React from 'react'\nimport { getImageURL } from 'src/lib/Ultilities/getURL';\nimport styles from './Preview.module.scss'\nexport default function PreviewMedia({media,onOpen,handleOpen}) {\n    return (\n        <div onClick={onOpen} className={`${styles.container} ${media.length===1?styles.single:styles.many}`}>\n            <GetElement media={media[0]}/>\n            {media.length>=2&&<GetElement left={media.length-2} media={media[1]}/>}\n            \n        </div>\n    )\n}\n\n\n\nconst GetElement=({media,left})=>{\n        const isVideo=media.type.match(/^video/)\n           \n        return <div className={styles.VideoThumbnail} style={{backgroundImage:isVideo?'':`url(\"${getImageURL(media)}\")`,width:'100%',height:'100%'}}>\n\n            {left>0&&<div className={styles.mediaRemain}>\n                <p>{left}+</p>\n            </div>}\n        </div>\n    }","import React from \"react\";\nimport Avatar from \"../Avatar\";\nimport styles from \"./Comment.module.scss\";\nimport { Link } from \"react-router-dom\";\nconst wordLimit = 20;\nexport default function CommentItem({ data }) {\n  const [user,setUser]=React.useState({})\n\nReact.useEffect(()=>{\n      setUser(data.user)\n    \n},[data])\n\n  const [seeMore, setSeeMore] = React.useState(false);\n  if (data?.content) {\n    return (\n      <div className={styles.commentItem}>\n<div className={styles.userinfor}>\n<Link to={`/user/${data.userid}`}>\n<Avatar userAvatar={user?.picture} />\n        </Link>\n  </div>        \n        <div>\n        <p className={styles.comment}>\n          <Link to={`/user/${data.userid}`}>\n        <strong>{user?.userfullname}</strong>\n        </Link>\n        <br/>\n          {data.content.length > wordLimit && !seeMore\n            ? data.content.substring(0, wordLimit)\n            : data.content}\n          {data.content.length > wordLimit && (\n            <span\n              onClick={() => {\n                setSeeMore((s) => !s);\n              }}\n              style={{ color: \"gray\" }}\n            >\n              ...see {seeMore ? \"less\" : \"more\"}\n            </span>\n          )}\n          <br/>\n                              <span className={styles.commentInfor}>{timeConverter(data.datecreated)} <span style={{color:\"gray\",marginLeft:20}}>replies</span></span>\n\n        </p>\n        \n\n        </div>\n\n        \n      </div>\n    );\n  }\n  return <></>;\n}\n\nfunction timeConverter(UNIX_timestamp){\n  var utcSeconds = UNIX_timestamp/1000;\nvar d = new Date(0); // The 0 there is the key, which sets the date to the epoch\nd.setUTCSeconds(utcSeconds);\nreturn d.toDateString()\n}","import React from \"react\";\nimport styles from \"./Comment.module.scss\";\nimport { Drawer, useMediaQuery } from \"@material-ui/core\";\nimport CommentItem from \"./CommentItem\";\nimport { useSelector } from \"react-redux\";\nimport { useLazyQuery ,useMutation} from \"@apollo/client\";\nimport Query from \"src/lib/API/Apollo/Queries\";\nimport { useSubscription } from \"@apollo/client\";\n\n\nexport default function Comment({ inMediaBrowser, onOpen, onClose, postID }) {\n  const [comment, setComment] = React.useState([]);\n  const [isLoad, setIsLoaded] = React.useState(false);\n\n  \n  const getPostComment=useLazyQuery(Query.GET_POST_LATEST_COMMENT,{  fetchPolicy: \"no-cache\"\n})\n  const postNewComment=useMutation(Query.POST_COMMENT,{fetchPolicy:'no-cache'})\n  const elRef = React.useRef(null);\n  const userId = useSelector((state) => state.user.uid);\n const [openDrawer,setSwitch]=React.useState(false)\n const isMobile = useMediaQuery(\"(max-width:1000px)\");\n\n  React.useEffect(()=>{\n       if(isMobile!==undefined && isMobile!==null){\n        if(isMobile&&onOpen&&!inMediaBrowser){\n          setSwitch(true)\n        }else{\n          setSwitch(false)\n        }\n       }\n  },[isMobile,inMediaBrowser,onOpen])\n\n  React.useEffect(() => {\n    if (onOpen) {\n      setIsLoaded(true);\n    }\n  }, [onOpen]);\n  const onPostComment = (userId, postID) => {\n    return async (comment) => {\n      const newComment = {\n        comment: { content: comment, userid: userId, postid: postID },\n      };\n      postNewComment[0]({variables:newComment.comment})\n  \n    };\n  };\n  React.useEffect(() => {\n    if (isLoad) {\n      getPostComment[0]({variables:{postid:postID}})\n    }\n  }, [isLoad, postID]);\n  React.useEffect(()=>{\n    const data=getPostComment[1].data\n    if(data){\n      setComment(s=>([...s,...data.getPostCommentById]))\n    }\n  },[getPostComment[1].data])\n  if (comment) {\n    return (\n      <div\n        ref={elRef}\n        className={`${styles.container} ${\n          onOpen ? styles.open : styles.close\n        } ${inMediaBrowser ? styles.inMediaBrowser : \"\"}`}\n      >\n\n        {onOpen?openDrawer?<DrawerComment\n            onPostComment={onPostComment(userId, postID)}\n            comments={comment}\n            onClose={onClose}\n            isOpen={true}\n          />:\n          <ScrollComment\n            onPostComment={onPostComment(userId, postID)}\n            comments={comment}\n            onClose={onClose}\n          />:<></>}\n        \n          \n        \n      \n       \n        {onOpen&&postID&&<CommentListener update={setComment} postid={postID}/>}\n      </div>\n    );\n  }\n\n  return <p></p>;\n}\n\nconst DrawerComment = ({ isOpen, onClose, comments, onPostComment }) => {\n  const ref = React.useRef(null);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (ref.current.value.trim() !== \"\") {\n      onPostComment(ref.current.value).then((res) => {\n        ref.current.value = \"\";\n      });\n    }\n  };\n  return (\n    <Drawer anchor={\"bottom\"} open={isOpen} onClose={onClose}>\n      <div className={styles.drawerComment}>\n        <form onSubmit={onSubmit} className={styles.formComment}>\n          <input ref={ref} type=\"text\" />\n          <button type=\"submit\">post</button>\n        </form>\n        {comments.map((cmt) => (\n          <CommentItem\n            data={cmt}\n            key={`comment-drawer-${cmt.commentid}-${cmt.postid}-${cmt.userid}`}\n          />\n        ))}\n      </div>\n    </Drawer>\n  );\n};\nconst ScrollComment = ({ comments, onClose, onPostComment }) => {\n  const ref = React.useRef(null);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (ref.current.value.trim() !== \"\") {\n      onPostComment(ref.current.value).then((res) => {\n        ref.current.value = \"\";\n      });\n    }\n  };\n  return (\n    <div>\n      <form onSubmit={onSubmit} className={styles.formComment}>\n        <input ref={ref} type=\"text\" />\n        <button type=\"submit\">post</button>\n      </form>\n      {comments.map((cmt) => (\n        <CommentItem\n          key={`comment-scroll-${cmt.commentid}-${cmt.postid}-${cmt.userid}`}\n          data={cmt}\n        />\n      ))}\n\n      <h4>load older comment</h4>\n    </div>\n  );\n};\nconst CommentListener=({postid,update})=>{\n  const {data,loading}=useSubscription(Query.UPDATE_COMMENT,{variables:{postid:postid}})\n React.useEffect(()=>{\n    console.log(data);\n    if(data?.getComment){\n      update(s=>([data.getComment,...s]))\n    }\n  },[data])\n  return <></>\n}","\n\nexport function timeConverter(UNIX_timestamp){\n    var utcSeconds = UNIX_timestamp/1000;\n  var d = new Date(0); // The 0 there is the key, which sets the date to the epoch\n  d.setUTCSeconds(utcSeconds);\n  return d.toDateString()\n  }","import url from \"./URL\";\nconst gqlURL = url.img + \"graphql\";\n\n\nconst createLikeQuery=({userid,postid,iconcode})=>`mutation{\n\tcreateLike(input:{userid:${userid},postid:${postid},iconcode:${iconcode}}){\n   \n\n      change\n      status\n    \n  }\n}`\nconst checkLikeStatusQuery=({userid,postid})=>`query{\n  checkUserLikePost(input:{userid:${userid},postid:${postid}}) {\n    didlike\n  }\n}`\nconst deleteLikeQuery=({userid,postid})=>`mutation{\n  deleteLike(input:{userid:${userid},postid:${postid}}){\n    \n\n    change\n      status\n    \n  }\n\n\n}`\n\nconst getOnePostQuery=(postid)=>`\t{\n  getPostInformationById(postid:${postid}){\n    postid\n    userid\n    content\n    media\n    datecreated\n    likecount\n    embeded\n    \n    user{\n      userfullname\n      userid\n      userdisplayname\n      picture\n    }\n  }\n}`\n\n\n\nconst getPostById = (postid) => {\n  try {\n    return fetchGQL(getOnePostQuery(postid));\n  } catch (err) {\n    return { err: err };\n  }\n};\n\n\nconst likePost=async(like)=>{\n  return await fetchGQL(createLikeQuery(like))\n}\nconst checkLikeStatus=async({userid,postid})=>{\n    return await fetchGQL(checkLikeStatusQuery({userid,postid}))\n}\nconst deleteLike=async({userid,postid})=>{\n  return await fetchGQL(deleteLikeQuery({userid,postid}))\n}\n\n// helper\nconst fetchGQL = async(query) => {\n  try{\n    return await fetch(gqlURL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ query: query }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      \n  }catch(e){\n    return {err:e}\n  }\n};\nexport {\n \n  likePost,\n  checkLikeStatus,\n  deleteLike,\n  getPostById\n  \n};\n","import React, { useState } from \"react\";\nimport styles from \"./Post.module.scss\";\nimport Avatar from \"../Avatar\";\nimport like from \"src/stylesheets/svg/reaction.svg\";\nimport userLike from \"src/stylesheets/svg/userreaction.svg\";\nimport { Link } from \"react-router-dom\";\nimport PreviewMedia from \"../PreviewMedia\";\nimport Comment from \"../Comment\";\nimport { Badge, withStyles } from \"@material-ui/core\";\nimport { timeConverter } from \"src/lib/Ultilities/Format\";\nimport { likePost, checkLikeStatus, deleteLike } from \"src/lib/API/Graphql\";\nimport { useSelector } from \"react-redux\";\nimport { useTheme } from \"src/lib/hooks/useColor\";\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    right: 5,\n    top: 30,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: \"0 4px\",\n    backgroundColor: \"#fd0061\",\n  },\n}))(Badge);\n\nexport default function Post({\n  data,\n  onOpen,\n  type = \"minimal\",\n  propsStyle,\n}) {\n  const [seemore, setSeemore] = useState(false);\n  const [seeComment, setCommentView] = useState(type!==\"minimal\");\n  const [didLike, setLike] = useState(null);\n  const [isLock, setLock] = useState(false);\n  const [likeCount, setCount] = useState(0);\n  const userid = useSelector((state) => state.user.uid);\n  const theme=useTheme()\n  React.useEffect(() => {\n    if (userid && data.postid) {\n      checkLikeStatus({ userid: userid, postid: data.postid }).then((res) => {\n        if (res.data) {\n          const didlike = res.data.checkUserLikePost.didlike;\n          if (didlike) {\n            setLike(true);\n          } else {\n            setLike(false);\n          }\n          setCount(parseInt(data.likecount));\n        } else {\n          setLike(null);\n        }\n      });\n    }\n  }, [data]);\n\n  React.useEffect(() => {\n    if (isLock) {\n      if (didLike === false) {\n        likePost({ userid: userid, postid: data.postid, iconcode: 1 }).then(\n          (res) => {\n            if (res.data) {\n              setLike(true);\n\n              setCount((c) => c + 1);\n            }\n          }\n        );\n      } else if (didLike === true) {\n        deleteLike({ userid: userid, postid: data.postid }).then((res) => {\n          if (res.data) {\n            setLike(false);\n\n            setCount((c) => c - 1);\n          }\n        });\n      }\n    }\n  }, [isLock]);\n  // unlock like button\n  React.useEffect(() => {\n    \n    let a;\n    if (didLike !== null) {\n      a = setTimeout(() => {\n        setLock(false);\n      }, 200);\n    }\n    return () => {\n      clearTimeout(a);\n    };\n  }, [didLike]);\n  if (data) {\n    return (\n      <>\n        <div style={{...propsStyle,backgroundColor:theme.backgroundPost,color:theme.text}} className={styles.container} tabIndex=\"1\">\n          {/* user infor */}\n\n          <div className={styles.userInfor}>\n            <Link to={`/user/${data?.userid}`}>\n              <Avatar userAvatar={data?.user?.picture ?? null} size=\"medium\" />\n            </Link>\n            {/* user name and date created */}\n            <div className={styles.postInfor}>\n              <Link to={`/user/${data?.userid}`}>\n                <p>{data?.user?.userfullname || \"\"}</p>\n              </Link>\n              <p>{timeConverter(data.datecreated)}</p>\n            </div>\n          </div>\n\n          {/* post */}\n          <div title=\"click to open post\" className={styles.postContent}>\n            <p>\n              {!seemore ? data.content.substring(0, 200) : data.content}\n              <span\n                style={{\n                  color: \"gray\",\n                  display: data.content.length < 200 ? \"none\" : \"\",\n                }}\n                onClick={(e) => {\n                  setSeemore((state) => !state);\n\n                  if (seemore) {\n                    setTimeout(() => {\n                      e.target.scrollIntoView({\n                        behavior: \"smooth\",\n                        block: \"end\",\n                        inline: \"nearest\",\n                      });\n                    }, 50);\n                  }\n                }}\n              >\n                ...see {seemore ? \"less\" : \"more\"}\n              </span>\n            </p>\n            {data?.media !== \"[]\" && type === \"minimal\" ? (\n              <PreviewMedia onOpen={onOpen} media={JSON.parse(data.media)} />\n            ) : (\n              <></>\n            )}\n          </div>\n          {/* likes and comments */}\n          <div className={styles.like_comment}>\n            <button\n              disabled={isLock || didLike === null}\n              className=\"button-none\"\n              onClick={() => {\n                setLock(true);\n              }}\n            >\n              <StyledBadge\n                badgeContent={likeCount}\n                color=\"secondary\"\n              >\n                <Avatar userAvatar={didLike ? userLike : like} round={false} />\n              </StyledBadge>\n            </button>\n\n            <div></div>\n            <p\n              style={{ cursor: \"pointer\" }}\n              onClick={() => {\n                \n                  setCommentView((s) => !s);\n                \n              }}\n            >\n              comments\n            </p>\n          </div>\n          <Comment\n            userId={data.userid}\n            postID={data.postid}\n            onOpen={seeComment}\n            onClose={() => {\n              setCommentView(false);\n            }}\n            inMediaBrowser={type !== \"minimal\"}\n          />\n        </div>\n      </>\n    );\n  }\n  return <></>;\n}\n","export default __webpack_public_path__ + \"static/media/back.bd68ef98.svg\";","export default __webpack_public_path__ + \"static/media/forward.45007aa6.svg\";","import React from \"react\";\nimport styles from \"./MediaViewer.module.scss\";\nimport { getImageURL } from \"src/lib/Ultilities/getURL\";\nimport back from \"src/stylesheets/svg/back.svg\";\nimport forward from \"src/stylesheets/svg/forward.svg\";\nexport default function MediaViewer({ media }) {\n  const [index, setIndex] = React.useState(0);\n  const containerRef = React.useRef(null);\n  const [thisDimension,setDimension]=React.useState({width:0,height:0})\n  const navigate = (dir) => () => {\n    setIndex((old) =>\n      dir === \"r\" ? Math.min(old + 1, media.length - 1) : Math.max(old - 1, 0)\n    );\n  };\n  React.useEffect(() => {\n    \n      const changeHandler=()=>{\n        \n        \n          const newWidth=containerRef.current.offsetWidth;\n          const newHeight=containerRef.current.offsetHeight;\n            setDimension({width:newWidth,height:newHeight})\n        \n      }\n      changeHandler()\n      if(typeof window){\n        window.addEventListener('resize',changeHandler)\n\n      }\n      return()=>{\n        if(typeof window){\n          window.removeEventListener('resize',changeHandler)\n\n        }\n      }\n  }, [index]);\n  \n  return (\n    <div className={styles.container} ref={containerRef}>\n      {index > 0 && (\n        <button onClick={navigate(\"l\")} className={styles.Left}>\n          <img alt=\"go back\" src={back} />\n        </button>\n      )}\n      <Show ctnDimension={thisDimension}  media={media[index]} />\n      {index < media.length - 1 && (\n        <button onClick={navigate(\"r\")} className={styles.Right}>\n          <img alt=\"go forward\" src={forward} />\n        </button>\n      )}\n    </div>\n  );\n}\nconst Image = ({ image ,ctnDimension}) => {\n  const thisRef=React.useRef(null)\n  const [moreWidth,setMoreWidth]=React.useState(false)\n  return (\n    <img\n        ref={thisRef}\n        onLoad={(e)=>{\n        const image=e.target\n        const thisWidth=image.offsetWidth\n        const thisHeight=image.offsetHeight\n        if(thisWidth > ctnDimension.width){\n          setMoreWidth(true)\n        }\n        if(thisHeight>ctnDimension.height){\n          setMoreWidth(false)\n        }\n      \n        }}\n        style={{userSelect:\"none\"}}\n      alt=\"user post\"\n      className={moreWidth?styles.ImageWidth:styles.ImageHeight}\n      src={getImageURL(image)}\n    />\n  );\n};\n\nconst Video = ({ video }) => {\n  return (\n    <video\n      controls\n      className={styles.Video}\n      src={getImageURL(video)}\n    />\n  );\n};\nconst Show = ({ media ,ctnDimension}) => {\n  if (media.type.match(/^video/)) {\n    return <Video video={media} />;\n  }\n  return <Image ctnDimension={ctnDimension}  image={media} />;\n}\n\n","export default __webpack_public_path__ + \"static/media/minimize.2ade6ffd.svg\";","import React,{useState} from 'react'\nimport style from './MediaBrowser.module.scss'\nimport Post from '../Post';\nimport MediaViewer from '../MediaViewer'\nimport minimize from 'src/stylesheets/svg/minimize.svg'\nimport {getPostById} from 'src/lib/API/Graphql'\nexport default function MediaBrowser({open=false,onClose,postid=null}) {\n    const [post,setPost]=useState({})\n    React.useEffect(()=>{\n        if(typeof document){\n           if(open){\n            document.body.style.overflow = 'hidden';\n           }else{\n            document.body.style.overflow = '';\n           }\n\n        }\n    },[open])\n    React.useEffect(()=>{\n        if(postid>=0){\n            getPostById(postid).then(res=>{\n                if(res.data){\n                    \n                        setPost(res.data.getPostInformationById)\n                    \n                }\n            })\n        }\n        return ()=>{\n            document.body.style.overflow = '';\n        }\n    },[open,postid])\n    if(open){\n        return (<>\n        \n         <div  className={style.container}>\n              {post.postid&& <div className={`${style.postWrapper} ${post.media!==\"[]\"?style.hasMedia:style.noMedia}`}>\n               {post?.media!==\"[]\"&&<div className={style.mediaViewer}>\n                <button className={style.closeButton} onClick={onClose}>\n                    <img src={minimize} alt=\"exit media\"/>\n                </button>\n\n                <MediaViewer media={JSON.parse(post.media)}/>\n                </div>}\n                   <Post type=\"detail\" data={post}/>\n               </div>}\n            </div>\n        </>\n           \n        )\n    }\n    return <></>\n}\n","import React, { useState, useEffect } from \"react\";\nimport Post from \"src/Components/Post\";\nimport MediaBrowser from \"../MediaBrowser\";\n// import InfiniteScroll from \"react-infinite-scroll-component\";\nimport API from \"src/lib/API/UserAPI\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport Query from \"src/lib/API/Apollo/Queries\";\nexport default function NewsFeed({ posts, setPosts,byUID=false,uid }) {\n  const [open, setOpen] = useState(false);\n  const [currentPost, setCurrent] = useState(null);\n  const [hasMore,setHasMore]=useState(true)\n  const getAllPost=useLazyQuery(Query.GET_LATEST_POST,{fetchPolicy: \"no-cache\"})\n  const getUserPost=useLazyQuery(Query.GET_USER_LATEST_POST,{fetchPolicy: \"no-cache\"})\n  const onUpdate = () => {\n    if (posts.length > 0) {\n        const  lastId = posts[posts.length - 1].postid;\n      if(!uid || !byUID){\n        API.getEarlierPostByLastId(lastId).then((res) => {\n          setPosts((state) => [...state, ...res.rows]);\n  \n          if (res.rows.length < 10) {\n            setHasMore(false);\n          }\n        })\n      }\n      else{\n          API.getUserEarlierPostById(uid,lastId).then(res=>{\n            setPosts((state) => [...state, ...res.rows]);\n  \n            if (res.rows.length < 10) {\n              setHasMore(false);\n            }\n          })\n      }\n    }\n\n    }\n  \n     useEffect(()=>{\n        if(uid>=0 && byUID===true){\n           \n            getUserPost[0]({variables:{userid:uid}}) \n           \n        }else{\n            getAllPost[0]()\n        }\n    },[uid,byUID])\n    React.useEffect(()=>{\n      const data=getAllPost[1].data\n      if(data){\n        setPosts(data.getLatestPost)\n      }\n    },[getAllPost])\n    React.useEffect(()=>{\n      const data=getUserPost[1].data\n      if(data){\n         setPosts(data.getLatestPostByUserID)\n      }\n    },[getUserPost])\n  const openBrowser = (index) => {\n    return () => {\n      setOpen(true);\n      setCurrent(posts[index].postid);\n    };\n  };\n  if (posts.length>0) {\n    return (\n      <div>\n        {currentPost&&<MediaBrowser\n          open={open}\n          postid={currentPost}\n          \n          onClose={() => {\n            setOpen(false);\n          }}\n        />}\n        \n          {posts.map((data, index) => (\n            <Post\n                propsStyle={{marginBottom:17}}\n              onOpen={openBrowser(index)}\n              key={\"post-id-\" + data.postid}\n              data={data}\n            />\n          ))}\n       \n      </div>\n    );\n  }\n  return <></>;\n}\n","export default __webpack_public_path__ + \"static/media/picture.b0c992ca.svg\";","export default __webpack_public_path__ + \"static/media/video.f3b3fb0e.svg\";","import React, { useRef ,useState,useEffect,useCallback} from \"react\";\nimport styles from \"./PostEdit.module.scss\";\nimport { useMedia } from \"src/lib/hooks/useMedia\";\nimport {Badge} from '@material-ui/core'\nimport API from 'src/lib/API/UserAPI'\nimport {useSelector} from 'react-redux'\nimport {useTheme} from 'src/lib/hooks/useColor'\nfunction MyEditor({value,setValue}) {\n  \n  return (\n    <div className={styles.editorWrapper}>\n      <textarea\n        value={value}\n        onChange={(e) => {\n          setValue(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\nfunction MyFileViewer({files,handleFiles}) {\n    const deleteFile=useCallback((index)=>{\n      return ()=>{\n          handleFiles(state=>state.filter((file,i)=>index!==i))\n      }\n  },[handleFiles])\n  return <div className={styles.fileViewerWrapper}>\n      {files.map((file,index)=><ImageReview key={'file+'+index} onDelete={deleteFile(index)} index={index+1} file={file}/>)}\n  </div>;\n}\n\nfunction ImageReview({file,index,onDelete}){\n    const [img,setImg]=useState('')\n    const bgStyle={\n        backgroundPosition:\"center\",\n        backgroundSize:'cover',\n        display:'flex',\n        alignItems:'flex-end',\n        justifyContent:\"space-between\"\n    }\n    useEffect(() => {\n        const reader = new FileReader();\n  reader.addEventListener('load', (event) => {\n   const src=(event.target.result);\n   \n    setImg(src)\n  },[]);\n  reader.readAsDataURL(file);\n    }, [file])\n        return <div draggable style={{backgroundImage:`url(${img})`,...bgStyle}}>\n            <Badge  badgeContent={index} color=\"secondary\">\n            <div style={{height:15,width:15}}></div>\n\n            </Badge>\n            <button onClick={onDelete} style={{backgroundColor:\"var(--light-button)\",color:'white'}} className=\"button\">delete</button>\n        </div>\n}\n\n\n\nexport default function PostEdit({ onClose,appendPost }) {\n  const theme=useTheme()\n    const [editorState, setEditorState] = React.useState(\"\");\n  const user=useSelector(state=>state.user)\n  const fileRef = useRef(null);\n  const [files,appendFile,handleFiles] = useMedia();\n  const [viewFile,setViewFile]=useState(false)\n  \n  const postButton = { display: \"flex\", justifyContent: \"flex-end\" };\n  const [isLock,setLock]=useState(false);\n  const [status,setStatus]=useState({message:''})\n  const onChangeInput=useCallback((value)=>{\n    if(status.message){\n      setStatus({message:''})\n    }\n    setEditorState(value)\n  },[setStatus,setEditorState,status.message])\n  const triggerFileUploads = useCallback(() => {\n    fileRef.current.click();\n  },[fileRef])\n  const closeEditor = useCallback((e) => {\n    onClose();\n  },[onClose])\n  const onPost=useCallback(()=>{\n     \n    setLock(true)\n    setStatus({message:\"posting!\"})\n },[])\n  useEffect(()=>{\n    if(isLock===true){\n      if(user.uid && editorState.trim().length){\n        var data = new FormData()\n        data.append('content', editorState)\n        data.append('count', files.length)\n        data.append('uid', user.uid)\n        files.forEach((file)=>{\n            data.append(`uploads`,file)\n        })\n        \n        \n        API.makePost(data).then(res=>{\n            if(res.postid){\n              const newPost={\n                ...res,\n                user:{\n                    userid:user.uid,\n                    userfullname:user.fullName,\n                    picture:user.profileImage\n                }\n              }\n              appendPost(newPost)\n              setStatus({message:\"success!\"})\n              onClose()\n            }\n        }).catch(e=>{\n          setStatus({message:\"post failed!\"})\n        })\n       }else{\n         \n        setStatus({message:\"no empty post!\"})\n        setLock(false)\n       }\n    }\n  },[isLock,user.uid,editorState,files,appendPost,onClose])\n\n\n  return (\n    <div   className={styles.container} style={{backgroundColor:`rbga(${theme.background},.3)`}}>\n      {/* files input hidden */}\n      <div className={styles.hiddenInput}>\n        <input\n          onChange={appendFile}\n          ref={fileRef}\n          type=\"file\"\n          multiple\n          accept=\"image/png, image/gif, image/jpeg, video/*\"\n        />\n      </div>\n      {/* overlay */}\n      <div\n        title=\"close editor\"\n        className={styles.overlay}\n        onClick={(e) => {\n          if(!isLock){\n            onClose();\n          }\n          \n        }}\n      ></div>\n      {/* text editor */}\n      <div className={styles.editor} style={{backgroundColor:theme.background,color:theme.text}}>\n        <div className={styles.userProfile}>\n          <p>{!viewFile?'Write post':\"Edit file (\"+files.length+\")\"} <strong>{status.message}</strong></p>\n        </div>\n\n        {viewFile?<MyFileViewer files={files} handleFiles={handleFiles}/>:<MyEditor value={editorState} setValue={onChangeInput}/>}\n\n        <div className={styles.groupButton}>\n          <button disabled={isLock} className=\"button\" onClick={triggerFileUploads}>\n            add media\n          </button>\n          <Badge invisible={viewFile} badgeContent={files.length || 0} color=\"secondary\">\n          <button className=\"button\" onClick={()=>{setViewFile(s=>!s)}}>view {viewFile?'post':'media'}</button>\n</Badge>\n          <div style={postButton}>\n            <button disabled={isLock} className=\"button bg-pink\" onClick={onPost}>post</button>\n          </div>\n          <button className=\"button\" disabled={isLock} onClick={closeEditor}>\n            cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {useState} from 'react'\n\n\nexport function useMedia(){\n    const [files,addFile]=useState([])\n    const appendFile=function(e){\n        for ( let file of e.target.files){\n            addFile((state)=>([...state,file]))\n        }\n    }\n    return [files,appendFile,addFile]\n}","export default __webpack_public_path__ + \"static/media/checkin.b8d0c75f.svg\";","import React,{ useState} from 'react'\nimport styles from './CheckIn.module.scss'\nimport Avatar from 'src/Components/Avatar'\nimport picture from 'src/stylesheets/svg/picture.svg'\nimport video from 'src/stylesheets/svg/video.svg'\nimport PostEdit from '../PostEdit'\nimport checkin from 'src/stylesheets/svg/checkin.svg'\nimport { useSelector } from 'react-redux'\nimport { useTheme } from \"src/lib/hooks/useColor\";\n\nexport default function CheckIn({appendPost}) {\n    const [openEditor,setOpenEditor]=useState(false)\n    const userImage=useSelector(state => state.user.profileImage)\n    const onClose=React.useCallback(()=>{setOpenEditor(false)},[])\n    const theme=useTheme()\n    return (\n        <div style={{backgroundColor:theme.background}} className={styles.container}>\n                {openEditor&&<PostEdit appendPost={appendPost} onClose={onClose}/>}\n                <div className={styles.CheckInItem}>\n                <Avatar size=\"large\" userAvatar={userImage??null}/>\n                </div>\n                <div className={styles.CheckInStatus}>\n                <div className={styles.CheckinForm}>\n                    <button onClick={()=>{setOpenEditor(true)}}>What's in your mind!</button>\n                </div>\n                <div className={styles.CheckinButton}>\n                    <button onClick={()=>{setOpenEditor(true)}}>\n                        <Avatar userAvatar={picture}/>\n                    <p>Media</p>\n                    </button>\n                    <button>\n                    <Avatar userAvatar={video}/>\n                    <p>Live</p>\n                    </button>\n                    <button>\n                    <Avatar userAvatar={checkin}/>   \n                    <p>Checkin! </p> \n                                        </button>\n                </div>\n\n                </div>\n        </div>\n    )\n}\n","\n\n\nimport UserPage from './UserPage'\nimport HomePage from \"./HomePage\"\nconst routes= [\n    {\n        name:'home',\n        path:'/',\n        Component:HomePage\n    },\n    {\n        name:'user',\n        path:'/user/:uid',\n        Component:UserPage\n    },\n    {\n        name:'post',\n        path:'/post',\n        Component:()=><h1>post page</h1>\n    }\n]\n\nexport default routes","import React, { useState,useCallback } from \"react\";\nimport styles from \"./HomePage.module.scss\";\nimport NewsFeed from \"src/Components/NewsFeed\";\nimport CheckIn from \"src/Components/CheckIn\";\nimport { useTheme } from \"src/lib/hooks/useColor\";\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([]);\n  const theme=useTheme()\n  \n \n  const appendPost = useCallback((post) => {\n        setPosts(state=>([post,...state]))\n  },[])\n  \n  return (\n    <div  className={styles.container} style={{backgroundColor:theme.background,color:theme.text}}>\n      <CheckIn appendPost={appendPost} />     \n        <NewsFeed byUID={false} uid={null} posts={posts} setPosts={setPosts} />\n    </div>\n  );\n}\n\n","import React,{useState,useEffect} from 'react'\nimport styles from './UserPage.module.scss'\nimport UserWall from 'src/Components/UserWall'\nimport NewsFeed from 'src/Components/NewsFeed'\nimport CheckIn from 'src/Components/CheckIn'\nimport {useSelector} from 'react-redux'\nimport { useQuery } from '@apollo/client'\nimport Query from 'src/lib/API/Apollo/Queries'\nimport { useTheme } from \"src/lib/hooks/useColor\";\n\n\nexport default function UserPage({match}) {\n    const isUserID=useSelector(state=>state.user.uid)\n    const [posts,setPosts]=useState([])\n    const [user,setUser]=useState(null)\n    const theme=useTheme()\n    const { loading, error, data} = useQuery(Query.GET_USER_INFORMATION, {\n        variables: { id:parseInt(match.params.uid) },\n        errorPolicy:\"all\"\n      });\n    const appendPost = React.useCallback((post) => {\n        setPosts((state) => [post, ...state]);\n      },[])\n      React.useEffect(()=>{\n         \n         \n        if(data){\n           \n           setUser(data.getUserInformation)\n        }\n    },[data,error,match])\n    \n\n   \n \n   \n    if(user?.userid){\n        return (\n            <div className={styles.pageWrapper} style={{backgroundColor:theme.background,color:theme.text}}>\n                <UserWall  isLocal={isUserID===user.userid} user={user}/>\n              {user.userid===isUserID&&\n              \n               <div className={styles.CheckInWrapper}> <CheckIn appendPost={appendPost}/></div>\n              }\n               <div className={styles.NewsFeedWrapper}>\n               <NewsFeed posts={posts} uid={user.userid} byUID={true} setPosts={setPosts}/>\n               </div>\n            </div>\n        )\n    }\n    return <></>\n}\n","import Layout from './Components/Layout'\nimport {Switch,Route} from 'react-router-dom'\nimport routes from 'src/Page/route'\nimport ChatBubble from 'src/Components/ChatBubble';\nfunction App() {\n  return (\n    <Layout>\n        {/* <ChatBubble/> */}\n        <Switch>\n\n        {routes.map(({path,name,Component})=><Route key={name} children={(props)=>(<Component {...props} />)} exact path={path}/> )}\n\n        </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React, { useState } from \"react\";\nimport styles from \"./LoginPage.module.scss\";\nimport FacebookLogin from \"react-facebook-login\";\nimport API from \"src/lib/API/UserAPI\";\nimport { useDispatch } from \"react-redux\";\nimport TYPE from \"src/ReduxStore/bin/CONSTANT\";\nfunction getDateNowISO() {\n  return new Date().toISOString().substring(0, 10);\n}\n\nfunction DispatchLogin(res) {\n\n  return (dispatch)=>{\n    const { uid, userFullName, userDisplayName, picture } = res.user;\n  const payload = {\n    loggedIn: true,\n    uid: uid,\n    displayName: userDisplayName,\n    profileImage: picture,\n    fullName: userFullName,\n  };\n    dispatch({ type: TYPE.logInUser, payload: payload });\n  }\n\n}\nexport default function LoginPage() {\n  const [hasAccount, openLoginPage] = useState(true);\n  const [user, setUser] = useState(() => {\n    return {\n      username: \"\",\n      password: \"\",\n      userDisplayName: \"\",\n      userFullName: \"\",\n      dateOfBirth: \"\",\n      dateCreatedAccount: getDateNowISO(),\n      email: \"\",\n      phone: \"\",\n      gender: \"\",\n    };\n  });\n\n  // redux\n  const dispatch = useDispatch();\n\n  const handleUserInput = (key) => {\n    return (e) => {\n      let value = e.target.value;\n      if (key === \"username\" || key === \"password\") {\n        if (value[value.length - 1] === \" \") {\n          alert(\"không được có khoảng cách\");\n        }\n        value = value.trim();\n      }\n      setUser((state) => ({ ...state, [key]: value }));\n    };\n  };\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const { username, password } = user;\n    API.loginExistingUser({ username, password }).then((res) => {\n      if (!res.err) {\n        dispatch(DispatchLogin(res))\n      }\n    });\n  };\n  const handleRegister = (e) => {\n    e.preventDefault();\n    API.registerNewUser(user).then((res) => {\n      if (!res.err) {\n        dispatch(DispatchLogin(res))\n      }\n    });\n  };\n  return (\n    <div className={styles.container}>\n      <div className={styles.Form}>\n        {hasAccount ? (\n          <LoginForm\n            handleLogin={handleLogin}\n            user={user}\n            handleChange={handleUserInput}\n          />\n        ) : (\n          <RegisterForm\n            handleRegister={handleRegister}\n            user={user}\n            handleChange={handleUserInput}\n          />\n        )}\n        <p>{hasAccount ? \"Don't have account?\" : \"Account already exists?\"}</p>\n        <div className={styles.Suggest}>\n          <button\n            onClick={() => {\n              openLoginPage((s) => !s);\n            }}\n          >\n            {hasAccount ? \"Register\" : \"Login\"}\n          </button>\n          <span>or</span>\n          <FacebookLogin\n            appId=\"142129044562039\"\n            redirectUri={\"google.com\"}\n            cssClass=\"facebook-login-icon\"\n            autoLoad={false}\n            fields=\"name,email,picture\"\n            onClick={() => {\n              console.log(\"clicked\");\n            }}\n            callback={(res) => {\n              console.log(res);\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst RegisterForm = ({ user, handleChange, handleRegister }) => {\n  const schema = [\n    {\n      name: \"Username\",\n      type: \"text\",\n      placeholder: \"login account\",\n      isRequired: true,\n      key: \"username\",\n    },\n    {\n      name: \"Password\",\n      type: \"password\",\n      placeholder: \"secure password\",\n      isRequired: true,\n      key: \"password\",\n    },\n    {\n      name: \"Full name\",\n      type: \"text\",\n      placeholder: \"your full name\",\n      isRequired: true,\n      key: \"userFullName\",\n    },\n\n    {\n      name: \"Display name\",\n      type: \"text\",\n      placeholder: \"your display name\",\n      isRequired: true,\n      key: \"userDisplayName\",\n    },\n\n    {\n      name: \"Gender\",\n      type: \"text\",\n      placeholder: \"what is your gender\",\n      isRequired: true,\n      key: \"gender\",\n    },\n\n    {\n      name: \"Email\",\n      type: \"email\",\n      placeholder: \"your backup email\",\n      isRequired: true,\n      key: \"email\",\n    },\n\n    {\n      name: \"Phone\",\n      type: \"text\",\n      placeholder: \"your phone number\",\n      isRequired: true,\n      key: \"phone\",\n    },\n\n    {\n      name: \"Date of birth\",\n      type: \"date\",\n      placeholder: \"\",\n      isRequired: true,\n      key: \"dateOfBirth\",\n    },\n  ];\n\n  return (\n    <form onSubmit={handleRegister} className={styles.MainForm}>\n      {schema.map((input, index) => (\n        <div key={\"register-id-\" + index} className={styles.groupForm}>\n          <label>{input.name}</label>\n          <input\n            type={input.type}\n            value={user[input.key]}\n            onChange={handleChange(input.key)}\n            placeholder={input.placeholder}\n            required={input.isRequired}\n          />\n        </div>\n      ))}\n      <button type=\"submit\">Create Account</button>\n    </form>\n  );\n};\nconst LoginForm = ({ user, handleChange, handleLogin }) => {\n  const schema = [\n    {\n      name: \"Username\",\n      type: \"text\",\n      placeholder: \"login account\",\n      isRequired: true,\n      key: \"username\",\n    },\n    {\n      name: \"Password\",\n      type: \"password\",\n      placeholder: \"secure password\",\n      isRequired: true,\n      key: \"password\",\n    },\n  ];\n  return (\n    <form onSubmit={handleLogin} className={styles.MainForm}>\n      {schema.map((input, index) => (\n        <div key={\"login-id-\" + index} className={styles.groupForm}>\n          <label>{input.name}</label>\n          <input\n            type={input.type}\n            value={user[input.key]}\n            onChange={handleChange(input.key)}\n            placeholder={input.placeholder}\n            required={input.isRequired}\n          />\n        </div>\n      ))}\n\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n};\n","import Type from 'src/ReduxStore/bin/CONSTANT'\nconst defaultState={\n    loggedIn:false,\n    uid:null,\n    displayName:null,\n    profileImage:null,\n    fullName:null\n}\n\nconst user=(state=defaultState,action)=>{\n    if ( action.type===Type.logInUser){\n        return {...state,...action.payload}\n    }\n    if ( action.type===Type.logOutUser){\n        return {...defaultState}\n    } \n    if (action.type===Type.changeAvatar){\n        return {...state,...action.payload}\n    }\n    return state\n}\n\n\n\nexport default user","\nconst settings={\n    theme:'rosie'\n}\n\n\nconst Settings=(state=settings,action)=>{\n\n\n    return state\n}\n\nexport default Settings","const defaultState = {\n  queue: [],\n  Conversation: [],\n};\n\nconst message = (state = defaultState, action) => {\n  if (action.type === \"addToQueue\") {\n    return { ...state, queue: [...state.queue, action.payload] };\n  } else if (action.type === \"popFistElement\") {\n    console.log(\"doing\");\n    return { ...state, queue: [...state.queue].filter((e, i) => i !== 0) };\n  } else if (action.type === \"addConversation\") {\n    const old = [...state.Conversation];\n    const newState = [\n      action.payload,\n      ...old.filter((e) => e.conversationid !== action.payload.conversationid),\n    ];\n\n    return { ...state, Conversation: newState };\n  } else if (action.type === \"getAllConversation\") {\n    return { ...state, Conversation: action.payload };\n  }else if (action.type===\"openConversation\"){\n      const id=action.payload\n      const old=[...state.Conversation]\n      const newState=old.map(e=>{\n          if(id===e.conversationid){\n              return {...e,state:'open'}\n          }\n          return e\n      })\n        \n      return {...state,Conversation:newState}\n  }else if (action.type===\"hideConversation\"){\n\n    const id=action.payload\n    const old=[...state.Conversation]\n    const newState=old.map(e=>{\n        if(id===e.conversationid){\n            return {...e,state:'hide'}\n        }\n        return e\n    })\n      \n    return {...state,Conversation:newState}\n  }else if (action.type===\"closeConversation\"){\n\n    const id=action.payload\n      const old=[...state.Conversation]\n      const newState=old.map(e=>{\n          if(id===e.conversationid){\n              return {...e,state:'close'}\n          }\n          return e\n      })\n        \n      return {...state,Conversation:newState}\n}\n  return state;\n};\nexport default message;\n","import UserReducer from './User'\nimport SettingsReducer from './Settings'\nimport message from './Message'\nimport { combineReducers } from 'redux'\n\n\nexport default combineReducers({user:UserReducer,settings:SettingsReducer,Message:message})","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './bin/reducers'\nimport ReduxThunk from 'redux-thunk'\nconst middleware=[ReduxThunk]\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(...middleware)\n    // other store enhancers if any\n  )\n);\n\n\nexport default store","import { split, HttpLink } from '@apollo/client';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nconst host=false?'192.168.1.8:4000':\"localhost:4000\"\nconst httpLink = new HttpLink({\n  uri: `http://${host}/graphql`\n});\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://${host}/graphql`,\n  options: {\n    reconnect: true\n  }\n});\n\n// The split function takes three parameters:\n//\n// * A function that's called for each operation to execute\n// * The Link to use for an operation if the function returns a \"truthy\" value\n// * The Link to use for an operation if the function returns a \"falsy\" value\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink,\n);\nexport {splitLink}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport LoginPage from \"./Page/LoginPage\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { useLogin } from \"src/lib/hooks/useLogin\";\nimport store from \"src/ReduxStore/store\";\nimport url from \"./lib/API/URL\";\nimport \"src/stylesheets/css/global.css\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  \n} from \"@apollo/client\";\nimport { splitLink } from \"./lib/API/Apollo/Link\";\nconst client = new ApolloClient({\n  link: splitLink,\n  cache: new InMemoryCache()\n});\n\nconst Loader = () => {\n  \n  const isLoggedIn = useLogin();\n  if (isLoggedIn !== null) {\n    if (isLoggedIn === true) {\n      return <App />;\n    }\n    return (\n        <LoginPage />\n      \n    );\n  }\n  return <></>;\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <ApolloProvider client={client}>\n        <Loader />\n    \n  </ApolloProvider>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { useSelector } from \"react-redux\";\nimport {useState,useEffect} from 'react'\n\nexport function useLogin(){\n    const [isLoggedIn,setLoggedIn]=useState(null)\n    const checkLoggedIn=useSelector(state=>state.user.loggedIn)\n    useEffect(() => {\n            setLoggedIn(checkLoggedIn)\n    }, [checkLoggedIn])\n\n\n    return isLoggedIn\n}","\nconst dev='http://192.168.1.8:4000'\nconst url={\n    dev:'/api',\n    img:'/',\n}\nexport default url","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ChatBubble_container__3S5sJ\",\"bubbleContainer\":\"ChatBubble_bubbleContainer__2rnxW\",\"bubbleItem\":\"ChatBubble_bubbleItem__S5xGB\",\"chatGroups\":\"ChatBubble_chatGroups__BmNCM\",\"chatItem\":\"ChatBubble_chatItem__juEdF\",\"header\":\"ChatBubble_header__8Ju_9\",\"form\":\"ChatBubble_form__5E2X2\",\"body\":\"ChatBubble_body__188j2\",\"bodyContent\":\"ChatBubble_bodyContent__7ssOB\",\"chatHidden\":\"ChatBubble_chatHidden__1modv\",\"left\":\"ChatBubble_left__1aWr4\",\"right\":\"ChatBubble_right__Ya3Kc\",\"commentItem\":\"ChatBubble_commentItem__2JRzb\",\"messageGroup\":\"ChatBubble_messageGroup__TzKEx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Comment_container__3imMD\",\"userinfor\":\"Comment_userinfor__1odgz\",\"commentItem\":\"Comment_commentItem__2pmZ5\",\"comment\":\"Comment_comment__1PIRq\",\"showup\":\"Comment_showup__2CGhg\",\"commentInfor\":\"Comment_commentInfor__26YK_\",\"drawerComment\":\"Comment_drawerComment__3qZ-O\",\"formComment\":\"Comment_formComment__3xEeE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PostEdit_container__1cABj\",\"overlay\":\"PostEdit_overlay__3nG28\",\"editor\":\"PostEdit_editor__3GTHV\",\"editorWrapper\":\"PostEdit_editorWrapper__1BXqX\",\"fileViewerWrapper\":\"PostEdit_fileViewerWrapper__GXxpg\",\"groupButton\":\"PostEdit_groupButton__1zwPx\",\"hiddenInput\":\"PostEdit_hiddenInput__31IVS\"};","import url from \"./URL\";\nimport axios from \"axios\";\nconst API = {\n  async registerNewUser(user) {\n    try {\n      const feedback = await fetch(\n        `${url.dev}/user/signup`,\n        getHeaders(\"POST\", { user: user })\n      ).then((res) => res.json());\n\n      if (feedback.status) {\n        return feedback;\n      }\n      throw new Error();\n    } catch (e) {\n      return { err: \"bad request\" };\n    }\n  },\n  async loginExistingUser(user) {\n    try {\n      const feedback = await fetch(\n        `${url.dev}/user/login`,\n        getHeaders(\"POST\", { user: user })\n      ).then((res) => res.json());\n\n      if (feedback.status) {\n        return feedback;\n      }\n      throw new Error();\n    } catch (e) {\n      return { err: \"bad request from client\" };\n    }\n  },\n  async loginFacebook(user) {\n    try {\n      const feedback = await fetch(\n        `${url.dev}/user/fblogin`,\n        getHeaders(\"POST\", { user: user })\n      ).then((res) => res.json());\n\n      if (feedback.status) {\n        return feedback;\n      }\n      throw new Error();\n    } catch (e) {\n      return { err: \"bad request\" };\n    }\n  },\n  async makePost(form) {\n    const data = await axios({\n      method: \"post\",\n      url: `${url.dev}/post/newpost`,\n      data: form,\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    })\n      .then(function (response) {\n        //handle success\n        return response.data;\n      })\n      .catch(function (response) {\n        //handle error\n        console.log(response);\n      });\n    return data;\n  },\n  async getLatestPost() {\n    try {\n      const posts = await axios\n        .get(`${url.dev}/post/latest`)\n        .then(({ data }) => data);\n      return posts;\n    } catch (e) {\n      return { err: \"bad request! no post.\" };\n    }\n  },\n  async getUserById(id) {\n    try {\n      return fetch(`${url.dev}/user/information/${id}`).then((res) =>\n        res.json()\n      );\n    } catch (e) {\n      return { err: e.message };\n    }\n  },\n  async getEarlierPostByLastId(lastId) {\n    try {\n      const response = await fetch(`${url.dev}/post/earlier/${lastId}`).then(\n        (res) => res.json()\n      );\n      return response;\n    } catch (e) {\n      return { err: e.message };\n    }\n  },\n  async getAllPostById(uid) {\n    try {\n      const response = await fetch(`${url.dev}/post/allpost/${uid}`).then(\n        (res) => res.json()\n      );\n      return response;\n    } catch (e) {\n      return { err: e.message };\n    }\n  },\n  async getUserEarlierPostById(uid, lastId) {\n    try {\n      const response = await fetch(\n        `${url.dev}/post/earlier/${uid}/${lastId}`\n      ).then((res) => res.json());\n      return response;\n    } catch (e) {\n      return { err: e.message };\n    }\n  },\n  async setUserAvatar(uid, form) {\n    try {\n      const data = await axios({\n        method: \"put\",\n        url: `${url.dev}/user/avatar/${uid}`,\n        data: form,\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      })\n        .then(function (response) {\n          //handle success\n          return response.data;\n        })\n        .catch(function (response) {\n          //handle error\n          console.log(response);\n        });\n      return data;\n    } catch (e) {\n      return { err: e.message };\n    }\n  },\n  async userCommentPost(comment){\n      try{\n        const response=await fetch(`${url.dev}/post/comment`,getHeaders(\"POST\",comment)).then(res=>res.json())\n        return response\n      }\n      catch(e){\n        return {err:'bad request'}\n      }\n  },\n  async getPostLatestComment(postid){\n        try{\n              const response=await fetch(`${url.dev}/post/comment/${postid}`).then(res=>res.json())\n              return response\n        }catch (e){\n          return {\n            err:'bad request'\n          }\n        }\n  },\n  async updateCommentByLastID(update){\n      try{  \n            const response=await fetch(`${url.dev}/post/comment/update`,getHeaders(\"POST\",update)).then(res=>res.json())\n            return response\n      }\n      catch(e){\n        return {err:\"not found\"}\n      }\n  }\n};\n\nconst getHeaders = (method, data) => {\n  return {\n    method: method, // *GET, POST, PUT, DELETE, etc.\n\n    mode: \"cors\",\n\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  };\n};\n\nexport default API;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginPage_container__2iffR\",\"Form\":\"LoginPage_Form__1MiFU\",\"MainForm\":\"LoginPage_MainForm__1w3oE\",\"Suggest\":\"LoginPage_Suggest__2T50A\",\"groupForm\":\"LoginPage_groupForm__3B-v9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MediaBrowser_container__l0ovP\",\"postWrapper\":\"MediaBrowser_postWrapper__2d20Z\",\"hasMedia\":\"MediaBrowser_hasMedia__3IbhH\",\"noMedia\":\"MediaBrowser_noMedia__2R8dK\",\"overlay\":\"MediaBrowser_overlay__nQIPx\",\"mediaViewer\":\"MediaBrowser_mediaViewer__1GHtf\",\"closeButton\":\"MediaBrowser_closeButton__1SpPQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MediaViewer_container__1UA21\",\"Left\":\"MediaViewer_Left__tRnSH\",\"Right\":\"MediaViewer_Right__1PFCw\",\"Video\":\"MediaViewer_Video__1Mwxg\",\"ImageHeight\":\"MediaViewer_ImageHeight__39tQr\",\"ImageWidth\":\"MediaViewer_ImageWidth__eMG_V\"};","const action= {\n    logInUser:'user/LogInUser',\n    logOutUser:\"user/LogOutUser\",\n    changeAvatar:\"user/changeAvatars\"\n}\nexport default action","// extracted by mini-css-extract-plugin\nmodule.exports = {\"small\":\"Avatar_small__1S5ft\",\"medium\":\"Avatar_medium__2Wn88\",\"large\":\"Avatar_large__16sur\",\"avatar\":\"Avatar_avatar__2GRnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Post_container__705-l\",\"userInfor\":\"Post_userInfor__3TsEz\",\"postInfor\":\"Post_postInfor__2u5Dy\",\"postContent\":\"Post_postContent__1O4Rf\",\"postMedia\":\"Post_postMedia__1d6sf\",\"like_comment\":\"Post_like_comment__D8NQK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Preview_container__1bfQb\",\"single\":\"Preview_single__1vPF6\",\"many\":\"Preview_many__PfN9x\",\"VideoThumbnail\":\"Preview_VideoThumbnail__MwOHt\",\"mediaRemain\":\"Preview_mediaRemain__sQjtr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CheckIn_container__lONDU\",\"CheckInStatus\":\"CheckIn_CheckInStatus__1Sa0w\",\"CheckInItem\":\"CheckIn_CheckInItem__1mM14\",\"CheckinForm\":\"CheckIn_CheckinForm__2Yoyx\",\"CheckinButton\":\"CheckIn_CheckinButton__3Itp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groupNotification\":\"Navbar_groupNotification__3NmGa\",\"navbar\":\"Navbar_navbar__3HLis\",\"content\":\"Navbar_content__j5B0b\",\"groupSearch\":\"Navbar_groupSearch__dY8E7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserWall_container__ASS1k\",\"background\":\"UserWall_background__1lSyb\",\"showup\":\"UserWall_showup__2KldS\",\"userInfor\":\"UserWall_userInfor__PIxU_\",\"group\":\"UserWall_group__2SClk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBox\":\"SearchBox_searchBox__1sNLE\",\"overlaySearch\":\"SearchBox_overlaySearch__lq-N2\",\"searchTitle\":\"SearchBox_searchTitle__nYQG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"UserPage_pageWrapper__3X4YX\",\"showup\":\"UserPage_showup__2HiG8\",\"CheckInWrapper\":\"UserPage_CheckInWrapper__2Mrh8\",\"NewsFeedWrapper\":\"UserPage_NewsFeedWrapper__1olmX\"};"],"sourceRoot":""}